Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ERROR

Grammar

Rule 0     S' -> program
Rule 1     program -> declist MAIN LRB RRB block
Rule 2     declist -> <empty>
Rule 3     declist -> declist dec
Rule 4     dec -> vardec
Rule 5     vardec -> idlist COLON type SEMICOLON
Rule 6     type -> INTEGER
Rule 7     type -> FLOAT
Rule 8     type -> BOOLEAN
Rule 9     iddec -> ID
Rule 10    iddec -> ID ASSIGN exp
Rule 11    iddec -> ID LSB exp RSB
Rule 12    idlist -> iddec
Rule 13    idlist -> idlist COMMA iddec
Rule 14    exp -> ID ASSIGN exp
Rule 15    exp -> exp SUM exp
Rule 16    exp -> exp SUB exp
Rule 17    exp -> exp DIV exp
Rule 18    exp -> exp MOD exp
Rule 19    exp -> exp MUL exp
Rule 20    exp -> const
Rule 21    exp -> ID
Rule 22    exp -> ID LSB exp RSB
Rule 23    exp -> ID LSB exp RSB ASSIGN exp
Rule 24    exp -> SUB exp
Rule 25    exp -> LRB exp RRB
Rule 26    const -> FLOATNUMBER
Rule 27    const -> INTEGERNUMBER
Rule 28    explist -> exp
Rule 29    explist -> explist COMMA exp
Rule 30    block -> LCB stmtlist RCB
Rule 31    stmtlist -> stmtlist stmt
Rule 32    stmtlist -> <empty>
Rule 33    stmt -> exp SEMICOLON
Rule 34    stmt -> block
Rule 35    stmt -> vardec
Rule 36    stmt -> PRINT LRB ID RRB SEMICOLON
Rule 37    stmt -> IF LRB exp RRB stmt elseiflist
Rule 38    stmt -> WHILE LRB exp RRB stmt
Rule 39    stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt
Rule 40    stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt
Rule 41    stmt -> FOR LRB ID IN ID RRB stmt
Rule 42    stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON
Rule 43    case -> WHERE const COLON stmtlist
Rule 44    cases -> cases case
Rule 45    cases -> <empty>
Rule 46    elseiflist -> elseiflist ELSEIF LRB exp RRB stmt
Rule 47    elseiflist -> <empty>
Rule 48    exp -> relopexp
Rule 49    relopexp -> exp GT exp
Rule 50    relopexp -> exp LT exp
Rule 51    relopexp -> exp NE exp
Rule 52    relopexp -> exp EQ exp
Rule 53    relopexp -> exp LE exp
Rule 54    relopexp -> exp GE exp
Rule 55    relopexp -> relopexp GT exp
Rule 56    relopexp -> relopexp LT exp
Rule 57    relopexp -> relopexp NE exp
Rule 58    relopexp -> relopexp EQ exp
Rule 59    relopexp -> relopexp LE exp
Rule 60    relopexp -> relopexp GE exp
Rule 61    exp -> exp AND exp
Rule 62    exp -> exp OR exp
Rule 63    exp -> NOT exp
Rule 64    const -> TRUE
Rule 65    const -> FALSE
Rule 66    exp -> ID LRB explist RRB
Rule 67    exp -> ID LRB RRB
Rule 68    dec -> funcdec
Rule 69    funcdec -> FUNCTION ID LRB paramdecs RRB COLON type block
Rule 70    funcdec -> FUNCTION ID LRB paramdecs RRB block
Rule 71    paramdecs -> paramdecslist
Rule 72    paramdecs -> <empty>
Rule 73    paramdecslist -> paramdec
Rule 74    paramdecslist -> paramdecslist COMMA paramdec
Rule 75    paramdec -> ID COLON type
Rule 76    paramdec -> ID LSB RSB COLON type
Rule 77    stmt -> RETURN exp SEMICOLON

Terminals, with rules where they appear

AND                  : 61
ASSIGN               : 10 14 23
BOOLEAN              : 8
COLON                : 5 43 69 75 76
COMMA                : 13 29 74
DIV                  : 17
ELSE                 : 39
ELSEIF               : 46
EQ                   : 52 58
ERROR                : 
FALSE                : 65
FLOAT                : 7
FLOATNUMBER          : 26
FOR                  : 40 41
FUNCTION             : 69 70
GE                   : 54 60
GT                   : 49 55
ID                   : 9 10 11 14 21 22 23 36 41 41 66 67 69 70 75 76
IF                   : 37 39
IN                   : 41
INTEGER              : 6
INTEGERNUMBER        : 27
LCB                  : 30 42
LE                   : 53 59
LRB                  : 1 25 36 37 38 39 40 41 42 46 66 67 69 70
LSB                  : 11 22 23 76
LT                   : 50 56
MAIN                 : 1
MOD                  : 18
MUL                  : 19
NE                   : 51 57
NOT                  : 63
ON                   : 42
OR                   : 62
PRINT                : 36
RCB                  : 30 42
RETURN               : 77
RRB                  : 1 25 36 37 38 39 40 41 42 46 66 67 69 70
RSB                  : 11 22 23 76
SEMICOLON            : 5 33 36 40 40 42 77
SUB                  : 16 24
SUM                  : 15
TRUE                 : 64
WHERE                : 43
WHILE                : 38
error                : 

Nonterminals, with rules where they appear

block                : 1 34 69 70
case                 : 44
cases                : 42 44
const                : 20 43
dec                  : 3
declist              : 1 3
elseiflist           : 37 39 46
exp                  : 10 11 14 15 15 16 16 17 17 18 18 19 19 22 23 23 24 25 28 29 33 37 38 39 40 40 40 42 46 49 49 50 50 51 51 52 52 53 53 54 54 55 56 57 58 59 60 61 61 62 62 63 77
explist              : 29 66
funcdec              : 68
iddec                : 12 13
idlist               : 5 13
paramdec             : 73 74
paramdecs            : 69 70
paramdecslist        : 71 74
program              : 0
relopexp             : 48 55 56 57 58 59 60
stmt                 : 31 37 38 39 39 40 41 46
stmtlist             : 30 31 43
type                 : 5 69 75 76
vardec               : 4 35

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declist MAIN LRB RRB block
    (2) declist -> .
    (3) declist -> . declist dec

    MAIN            reduce using rule 2 (declist -> .)
    FUNCTION        reduce using rule 2 (declist -> .)
    ID              reduce using rule 2 (declist -> .)

    program                        shift and go to state 1
    declist                        shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> declist . MAIN LRB RRB block
    (3) declist -> declist . dec
    (4) dec -> . vardec
    (68) dec -> . funcdec
    (5) vardec -> . idlist COLON type SEMICOLON
    (69) funcdec -> . FUNCTION ID LRB paramdecs RRB COLON type block
    (70) funcdec -> . FUNCTION ID LRB paramdecs RRB block
    (12) idlist -> . iddec
    (13) idlist -> . idlist COMMA iddec
    (9) iddec -> . ID
    (10) iddec -> . ID ASSIGN exp
    (11) iddec -> . ID LSB exp RSB

    MAIN            shift and go to state 3
    FUNCTION        shift and go to state 8
    ID              shift and go to state 9

    dec                            shift and go to state 4
    vardec                         shift and go to state 5
    funcdec                        shift and go to state 6
    idlist                         shift and go to state 7
    iddec                          shift and go to state 10

state 3

    (1) program -> declist MAIN . LRB RRB block

    LRB             shift and go to state 11


state 4

    (3) declist -> declist dec .

    MAIN            reduce using rule 3 (declist -> declist dec .)
    FUNCTION        reduce using rule 3 (declist -> declist dec .)
    ID              reduce using rule 3 (declist -> declist dec .)


state 5

    (4) dec -> vardec .

    MAIN            reduce using rule 4 (dec -> vardec .)
    FUNCTION        reduce using rule 4 (dec -> vardec .)
    ID              reduce using rule 4 (dec -> vardec .)


state 6

    (68) dec -> funcdec .

    MAIN            reduce using rule 68 (dec -> funcdec .)
    FUNCTION        reduce using rule 68 (dec -> funcdec .)
    ID              reduce using rule 68 (dec -> funcdec .)


state 7

    (5) vardec -> idlist . COLON type SEMICOLON
    (13) idlist -> idlist . COMMA iddec

    COLON           shift and go to state 12
    COMMA           shift and go to state 13


state 8

    (69) funcdec -> FUNCTION . ID LRB paramdecs RRB COLON type block
    (70) funcdec -> FUNCTION . ID LRB paramdecs RRB block

    ID              shift and go to state 14


state 9

    (9) iddec -> ID .
    (10) iddec -> ID . ASSIGN exp
    (11) iddec -> ID . LSB exp RSB

    COLON           reduce using rule 9 (iddec -> ID .)
    COMMA           reduce using rule 9 (iddec -> ID .)
    ASSIGN          shift and go to state 15
    LSB             shift and go to state 16


state 10

    (12) idlist -> iddec .

    COLON           reduce using rule 12 (idlist -> iddec .)
    COMMA           reduce using rule 12 (idlist -> iddec .)


state 11

    (1) program -> declist MAIN LRB . RRB block

    RRB             shift and go to state 17


state 12

    (5) vardec -> idlist COLON . type SEMICOLON
    (6) type -> . INTEGER
    (7) type -> . FLOAT
    (8) type -> . BOOLEAN

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21

    type                           shift and go to state 18

state 13

    (13) idlist -> idlist COMMA . iddec
    (9) iddec -> . ID
    (10) iddec -> . ID ASSIGN exp
    (11) iddec -> . ID LSB exp RSB

    ID              shift and go to state 9

    iddec                          shift and go to state 22

state 14

    (69) funcdec -> FUNCTION ID . LRB paramdecs RRB COLON type block
    (70) funcdec -> FUNCTION ID . LRB paramdecs RRB block

    LRB             shift and go to state 23


state 15

    (10) iddec -> ID ASSIGN . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 25
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 16

    (11) iddec -> ID LSB . exp RSB
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 35
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 17

    (1) program -> declist MAIN LRB RRB . block
    (30) block -> . LCB stmtlist RCB

    LCB             shift and go to state 37

    block                          shift and go to state 36

state 18

    (5) vardec -> idlist COLON type . SEMICOLON

    SEMICOLON       shift and go to state 38


state 19

    (6) type -> INTEGER .

    SEMICOLON       reduce using rule 6 (type -> INTEGER .)
    COMMA           reduce using rule 6 (type -> INTEGER .)
    RRB             reduce using rule 6 (type -> INTEGER .)
    LCB             reduce using rule 6 (type -> INTEGER .)


state 20

    (7) type -> FLOAT .

    SEMICOLON       reduce using rule 7 (type -> FLOAT .)
    COMMA           reduce using rule 7 (type -> FLOAT .)
    RRB             reduce using rule 7 (type -> FLOAT .)
    LCB             reduce using rule 7 (type -> FLOAT .)


state 21

    (8) type -> BOOLEAN .

    SEMICOLON       reduce using rule 8 (type -> BOOLEAN .)
    COMMA           reduce using rule 8 (type -> BOOLEAN .)
    RRB             reduce using rule 8 (type -> BOOLEAN .)
    LCB             reduce using rule 8 (type -> BOOLEAN .)


state 22

    (13) idlist -> idlist COMMA iddec .

    COLON           reduce using rule 13 (idlist -> idlist COMMA iddec .)
    COMMA           reduce using rule 13 (idlist -> idlist COMMA iddec .)


state 23

    (69) funcdec -> FUNCTION ID LRB . paramdecs RRB COLON type block
    (70) funcdec -> FUNCTION ID LRB . paramdecs RRB block
    (71) paramdecs -> . paramdecslist
    (72) paramdecs -> .
    (73) paramdecslist -> . paramdec
    (74) paramdecslist -> . paramdecslist COMMA paramdec
    (75) paramdec -> . ID COLON type
    (76) paramdec -> . ID LSB RSB COLON type

    RRB             reduce using rule 72 (paramdecs -> .)
    ID              shift and go to state 39

    paramdecs                      shift and go to state 40
    paramdecslist                  shift and go to state 41
    paramdec                       shift and go to state 42

state 24

    (14) exp -> ID . ASSIGN exp
    (21) exp -> ID .
    (22) exp -> ID . LSB exp RSB
    (23) exp -> ID . LSB exp RSB ASSIGN exp
    (66) exp -> ID . LRB explist RRB
    (67) exp -> ID . LRB RRB

    ASSIGN          shift and go to state 43
    SUM             reduce using rule 21 (exp -> ID .)
    SUB             reduce using rule 21 (exp -> ID .)
    DIV             reduce using rule 21 (exp -> ID .)
    MOD             reduce using rule 21 (exp -> ID .)
    MUL             reduce using rule 21 (exp -> ID .)
    AND             reduce using rule 21 (exp -> ID .)
    OR              reduce using rule 21 (exp -> ID .)
    GT              reduce using rule 21 (exp -> ID .)
    LT              reduce using rule 21 (exp -> ID .)
    NE              reduce using rule 21 (exp -> ID .)
    EQ              reduce using rule 21 (exp -> ID .)
    LE              reduce using rule 21 (exp -> ID .)
    GE              reduce using rule 21 (exp -> ID .)
    COLON           reduce using rule 21 (exp -> ID .)
    COMMA           reduce using rule 21 (exp -> ID .)
    RSB             reduce using rule 21 (exp -> ID .)
    RRB             reduce using rule 21 (exp -> ID .)
    SEMICOLON       reduce using rule 21 (exp -> ID .)
    LSB             shift and go to state 44
    LRB             shift and go to state 45


state 25

    (10) iddec -> ID ASSIGN exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    COLON           reduce using rule 10 (iddec -> ID ASSIGN exp .)
    COMMA           reduce using rule 10 (iddec -> ID ASSIGN exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58


state 26

    (24) exp -> SUB . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 59
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 27

    (20) exp -> const .

    SUM             reduce using rule 20 (exp -> const .)
    SUB             reduce using rule 20 (exp -> const .)
    DIV             reduce using rule 20 (exp -> const .)
    MOD             reduce using rule 20 (exp -> const .)
    MUL             reduce using rule 20 (exp -> const .)
    AND             reduce using rule 20 (exp -> const .)
    OR              reduce using rule 20 (exp -> const .)
    GT              reduce using rule 20 (exp -> const .)
    LT              reduce using rule 20 (exp -> const .)
    NE              reduce using rule 20 (exp -> const .)
    EQ              reduce using rule 20 (exp -> const .)
    LE              reduce using rule 20 (exp -> const .)
    GE              reduce using rule 20 (exp -> const .)
    COLON           reduce using rule 20 (exp -> const .)
    COMMA           reduce using rule 20 (exp -> const .)
    RSB             reduce using rule 20 (exp -> const .)
    RRB             reduce using rule 20 (exp -> const .)
    SEMICOLON       reduce using rule 20 (exp -> const .)


state 28

    (25) exp -> LRB . exp RRB
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 60
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 29

    (48) exp -> relopexp .
    (55) relopexp -> relopexp . GT exp
    (56) relopexp -> relopexp . LT exp
    (57) relopexp -> relopexp . NE exp
    (58) relopexp -> relopexp . EQ exp
    (59) relopexp -> relopexp . LE exp
    (60) relopexp -> relopexp . GE exp

    SUM             reduce using rule 48 (exp -> relopexp .)
    SUB             reduce using rule 48 (exp -> relopexp .)
    DIV             reduce using rule 48 (exp -> relopexp .)
    MOD             reduce using rule 48 (exp -> relopexp .)
    MUL             reduce using rule 48 (exp -> relopexp .)
    AND             reduce using rule 48 (exp -> relopexp .)
    OR              reduce using rule 48 (exp -> relopexp .)
    COLON           reduce using rule 48 (exp -> relopexp .)
    COMMA           reduce using rule 48 (exp -> relopexp .)
    RSB             reduce using rule 48 (exp -> relopexp .)
    RRB             reduce using rule 48 (exp -> relopexp .)
    SEMICOLON       reduce using rule 48 (exp -> relopexp .)
    GT              shift and go to state 61
    LT              shift and go to state 62
    NE              shift and go to state 63
    EQ              shift and go to state 64
    LE              shift and go to state 65
    GE              shift and go to state 66

  ! GT              [ reduce using rule 48 (exp -> relopexp .) ]
  ! LT              [ reduce using rule 48 (exp -> relopexp .) ]
  ! NE              [ reduce using rule 48 (exp -> relopexp .) ]
  ! EQ              [ reduce using rule 48 (exp -> relopexp .) ]
  ! LE              [ reduce using rule 48 (exp -> relopexp .) ]
  ! GE              [ reduce using rule 48 (exp -> relopexp .) ]


state 30

    (63) exp -> NOT . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 67
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 31

    (26) const -> FLOATNUMBER .

    SUM             reduce using rule 26 (const -> FLOATNUMBER .)
    SUB             reduce using rule 26 (const -> FLOATNUMBER .)
    DIV             reduce using rule 26 (const -> FLOATNUMBER .)
    MOD             reduce using rule 26 (const -> FLOATNUMBER .)
    MUL             reduce using rule 26 (const -> FLOATNUMBER .)
    AND             reduce using rule 26 (const -> FLOATNUMBER .)
    OR              reduce using rule 26 (const -> FLOATNUMBER .)
    GT              reduce using rule 26 (const -> FLOATNUMBER .)
    LT              reduce using rule 26 (const -> FLOATNUMBER .)
    NE              reduce using rule 26 (const -> FLOATNUMBER .)
    EQ              reduce using rule 26 (const -> FLOATNUMBER .)
    LE              reduce using rule 26 (const -> FLOATNUMBER .)
    GE              reduce using rule 26 (const -> FLOATNUMBER .)
    COLON           reduce using rule 26 (const -> FLOATNUMBER .)
    COMMA           reduce using rule 26 (const -> FLOATNUMBER .)
    RSB             reduce using rule 26 (const -> FLOATNUMBER .)
    RRB             reduce using rule 26 (const -> FLOATNUMBER .)
    SEMICOLON       reduce using rule 26 (const -> FLOATNUMBER .)


state 32

    (27) const -> INTEGERNUMBER .

    SUM             reduce using rule 27 (const -> INTEGERNUMBER .)
    SUB             reduce using rule 27 (const -> INTEGERNUMBER .)
    DIV             reduce using rule 27 (const -> INTEGERNUMBER .)
    MOD             reduce using rule 27 (const -> INTEGERNUMBER .)
    MUL             reduce using rule 27 (const -> INTEGERNUMBER .)
    AND             reduce using rule 27 (const -> INTEGERNUMBER .)
    OR              reduce using rule 27 (const -> INTEGERNUMBER .)
    GT              reduce using rule 27 (const -> INTEGERNUMBER .)
    LT              reduce using rule 27 (const -> INTEGERNUMBER .)
    NE              reduce using rule 27 (const -> INTEGERNUMBER .)
    EQ              reduce using rule 27 (const -> INTEGERNUMBER .)
    LE              reduce using rule 27 (const -> INTEGERNUMBER .)
    GE              reduce using rule 27 (const -> INTEGERNUMBER .)
    COLON           reduce using rule 27 (const -> INTEGERNUMBER .)
    COMMA           reduce using rule 27 (const -> INTEGERNUMBER .)
    RSB             reduce using rule 27 (const -> INTEGERNUMBER .)
    RRB             reduce using rule 27 (const -> INTEGERNUMBER .)
    SEMICOLON       reduce using rule 27 (const -> INTEGERNUMBER .)


state 33

    (64) const -> TRUE .

    SUM             reduce using rule 64 (const -> TRUE .)
    SUB             reduce using rule 64 (const -> TRUE .)
    DIV             reduce using rule 64 (const -> TRUE .)
    MOD             reduce using rule 64 (const -> TRUE .)
    MUL             reduce using rule 64 (const -> TRUE .)
    AND             reduce using rule 64 (const -> TRUE .)
    OR              reduce using rule 64 (const -> TRUE .)
    GT              reduce using rule 64 (const -> TRUE .)
    LT              reduce using rule 64 (const -> TRUE .)
    NE              reduce using rule 64 (const -> TRUE .)
    EQ              reduce using rule 64 (const -> TRUE .)
    LE              reduce using rule 64 (const -> TRUE .)
    GE              reduce using rule 64 (const -> TRUE .)
    COLON           reduce using rule 64 (const -> TRUE .)
    COMMA           reduce using rule 64 (const -> TRUE .)
    RSB             reduce using rule 64 (const -> TRUE .)
    RRB             reduce using rule 64 (const -> TRUE .)
    SEMICOLON       reduce using rule 64 (const -> TRUE .)


state 34

    (65) const -> FALSE .

    SUM             reduce using rule 65 (const -> FALSE .)
    SUB             reduce using rule 65 (const -> FALSE .)
    DIV             reduce using rule 65 (const -> FALSE .)
    MOD             reduce using rule 65 (const -> FALSE .)
    MUL             reduce using rule 65 (const -> FALSE .)
    AND             reduce using rule 65 (const -> FALSE .)
    OR              reduce using rule 65 (const -> FALSE .)
    GT              reduce using rule 65 (const -> FALSE .)
    LT              reduce using rule 65 (const -> FALSE .)
    NE              reduce using rule 65 (const -> FALSE .)
    EQ              reduce using rule 65 (const -> FALSE .)
    LE              reduce using rule 65 (const -> FALSE .)
    GE              reduce using rule 65 (const -> FALSE .)
    COLON           reduce using rule 65 (const -> FALSE .)
    COMMA           reduce using rule 65 (const -> FALSE .)
    RSB             reduce using rule 65 (const -> FALSE .)
    RRB             reduce using rule 65 (const -> FALSE .)
    SEMICOLON       reduce using rule 65 (const -> FALSE .)


state 35

    (11) iddec -> ID LSB exp . RSB
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    RSB             shift and go to state 68
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58


state 36

    (1) program -> declist MAIN LRB RRB block .

    $end            reduce using rule 1 (program -> declist MAIN LRB RRB block .)


state 37

    (30) block -> LCB . stmtlist RCB
    (31) stmtlist -> . stmtlist stmt
    (32) stmtlist -> .

    RCB             reduce using rule 32 (stmtlist -> .)
    PRINT           reduce using rule 32 (stmtlist -> .)
    IF              reduce using rule 32 (stmtlist -> .)
    WHILE           reduce using rule 32 (stmtlist -> .)
    FOR             reduce using rule 32 (stmtlist -> .)
    ON              reduce using rule 32 (stmtlist -> .)
    RETURN          reduce using rule 32 (stmtlist -> .)
    ID              reduce using rule 32 (stmtlist -> .)
    SUB             reduce using rule 32 (stmtlist -> .)
    LRB             reduce using rule 32 (stmtlist -> .)
    NOT             reduce using rule 32 (stmtlist -> .)
    LCB             reduce using rule 32 (stmtlist -> .)
    FLOATNUMBER     reduce using rule 32 (stmtlist -> .)
    INTEGERNUMBER   reduce using rule 32 (stmtlist -> .)
    TRUE            reduce using rule 32 (stmtlist -> .)
    FALSE           reduce using rule 32 (stmtlist -> .)

    stmtlist                       shift and go to state 69

state 38

    (5) vardec -> idlist COLON type SEMICOLON .

    MAIN            reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    FUNCTION        reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    ID              reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    RCB             reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    PRINT           reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    IF              reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    WHILE           reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    FOR             reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    ON              reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    RETURN          reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    SUB             reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    LRB             reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    NOT             reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    LCB             reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    FLOATNUMBER     reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    INTEGERNUMBER   reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    TRUE            reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    FALSE           reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    ELSE            reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    ELSEIF          reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)
    WHERE           reduce using rule 5 (vardec -> idlist COLON type SEMICOLON .)


state 39

    (75) paramdec -> ID . COLON type
    (76) paramdec -> ID . LSB RSB COLON type

    COLON           shift and go to state 70
    LSB             shift and go to state 71


state 40

    (69) funcdec -> FUNCTION ID LRB paramdecs . RRB COLON type block
    (70) funcdec -> FUNCTION ID LRB paramdecs . RRB block

    RRB             shift and go to state 72


state 41

    (71) paramdecs -> paramdecslist .
    (74) paramdecslist -> paramdecslist . COMMA paramdec

    RRB             reduce using rule 71 (paramdecs -> paramdecslist .)
    COMMA           shift and go to state 73


state 42

    (73) paramdecslist -> paramdec .

    COMMA           reduce using rule 73 (paramdecslist -> paramdec .)
    RRB             reduce using rule 73 (paramdecslist -> paramdec .)


state 43

    (14) exp -> ID ASSIGN . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 74
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 44

    (22) exp -> ID LSB . exp RSB
    (23) exp -> ID LSB . exp RSB ASSIGN exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 75
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 45

    (66) exp -> ID LRB . explist RRB
    (67) exp -> ID LRB . RRB
    (28) explist -> . exp
    (29) explist -> . explist COMMA exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    RRB             shift and go to state 77
    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    explist                        shift and go to state 76
    exp                            shift and go to state 78
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 46

    (15) exp -> exp SUM . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 79
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 47

    (16) exp -> exp SUB . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 80
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 48

    (17) exp -> exp DIV . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 81
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 49

    (18) exp -> exp MOD . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 82
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 50

    (19) exp -> exp MUL . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 83
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 51

    (61) exp -> exp AND . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 84
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 52

    (62) exp -> exp OR . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 85
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 53

    (49) relopexp -> exp GT . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 86
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 54

    (50) relopexp -> exp LT . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 87
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 55

    (51) relopexp -> exp NE . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 88
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 56

    (52) relopexp -> exp EQ . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 89
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 57

    (53) relopexp -> exp LE . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 90
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 58

    (54) relopexp -> exp GE . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 91
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 59

    (24) exp -> SUB exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    SUM             reduce using rule 24 (exp -> SUB exp .)
    SUB             reduce using rule 24 (exp -> SUB exp .)
    MOD             reduce using rule 24 (exp -> SUB exp .)
    AND             reduce using rule 24 (exp -> SUB exp .)
    OR              reduce using rule 24 (exp -> SUB exp .)
    GT              reduce using rule 24 (exp -> SUB exp .)
    LT              reduce using rule 24 (exp -> SUB exp .)
    NE              reduce using rule 24 (exp -> SUB exp .)
    EQ              reduce using rule 24 (exp -> SUB exp .)
    LE              reduce using rule 24 (exp -> SUB exp .)
    GE              reduce using rule 24 (exp -> SUB exp .)
    COLON           reduce using rule 24 (exp -> SUB exp .)
    COMMA           reduce using rule 24 (exp -> SUB exp .)
    RSB             reduce using rule 24 (exp -> SUB exp .)
    RRB             reduce using rule 24 (exp -> SUB exp .)
    SEMICOLON       reduce using rule 24 (exp -> SUB exp .)
    DIV             shift and go to state 48
    MUL             shift and go to state 50

  ! DIV             [ reduce using rule 24 (exp -> SUB exp .) ]
  ! MUL             [ reduce using rule 24 (exp -> SUB exp .) ]
  ! SUM             [ shift and go to state 46 ]
  ! SUB             [ shift and go to state 47 ]
  ! MOD             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 60

    (25) exp -> LRB exp . RRB
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    RRB             shift and go to state 92
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58


state 61

    (55) relopexp -> relopexp GT . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    relopexp                       shift and go to state 29
    exp                            shift and go to state 93
    const                          shift and go to state 27

state 62

    (56) relopexp -> relopexp LT . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    relopexp                       shift and go to state 29
    exp                            shift and go to state 94
    const                          shift and go to state 27

state 63

    (57) relopexp -> relopexp NE . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    relopexp                       shift and go to state 29
    exp                            shift and go to state 95
    const                          shift and go to state 27

state 64

    (58) relopexp -> relopexp EQ . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    relopexp                       shift and go to state 29
    exp                            shift and go to state 96
    const                          shift and go to state 27

state 65

    (59) relopexp -> relopexp LE . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    relopexp                       shift and go to state 29
    exp                            shift and go to state 97
    const                          shift and go to state 27

state 66

    (60) relopexp -> relopexp GE . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    relopexp                       shift and go to state 29
    exp                            shift and go to state 98
    const                          shift and go to state 27

state 67

    (63) exp -> NOT exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    AND             reduce using rule 63 (exp -> NOT exp .)
    OR              reduce using rule 63 (exp -> NOT exp .)
    COLON           reduce using rule 63 (exp -> NOT exp .)
    COMMA           reduce using rule 63 (exp -> NOT exp .)
    RSB             reduce using rule 63 (exp -> NOT exp .)
    RRB             reduce using rule 63 (exp -> NOT exp .)
    SEMICOLON       reduce using rule 63 (exp -> NOT exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58

  ! SUM             [ reduce using rule 63 (exp -> NOT exp .) ]
  ! SUB             [ reduce using rule 63 (exp -> NOT exp .) ]
  ! DIV             [ reduce using rule 63 (exp -> NOT exp .) ]
  ! MOD             [ reduce using rule 63 (exp -> NOT exp .) ]
  ! MUL             [ reduce using rule 63 (exp -> NOT exp .) ]
  ! GT              [ reduce using rule 63 (exp -> NOT exp .) ]
  ! LT              [ reduce using rule 63 (exp -> NOT exp .) ]
  ! NE              [ reduce using rule 63 (exp -> NOT exp .) ]
  ! EQ              [ reduce using rule 63 (exp -> NOT exp .) ]
  ! LE              [ reduce using rule 63 (exp -> NOT exp .) ]
  ! GE              [ reduce using rule 63 (exp -> NOT exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 68

    (11) iddec -> ID LSB exp RSB .

    COLON           reduce using rule 11 (iddec -> ID LSB exp RSB .)
    COMMA           reduce using rule 11 (iddec -> ID LSB exp RSB .)


state 69

    (30) block -> LCB stmtlist . RCB
    (31) stmtlist -> stmtlist . stmt
    (33) stmt -> . exp SEMICOLON
    (34) stmt -> . block
    (35) stmt -> . vardec
    (36) stmt -> . PRINT LRB ID RRB SEMICOLON
    (37) stmt -> . IF LRB exp RRB stmt elseiflist
    (38) stmt -> . WHILE LRB exp RRB stmt
    (39) stmt -> . IF LRB exp RRB stmt elseiflist ELSE stmt
    (40) stmt -> . FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt
    (41) stmt -> . FOR LRB ID IN ID RRB stmt
    (42) stmt -> . ON LRB exp RRB LCB cases RCB SEMICOLON
    (77) stmt -> . RETURN exp SEMICOLON
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (30) block -> . LCB stmtlist RCB
    (5) vardec -> . idlist COLON type SEMICOLON
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp
    (12) idlist -> . iddec
    (13) idlist -> . idlist COMMA iddec
    (9) iddec -> . ID
    (10) iddec -> . ID ASSIGN exp
    (11) iddec -> . ID LSB exp RSB

    RCB             shift and go to state 99
    PRINT           shift and go to state 104
    IF              shift and go to state 106
    WHILE           shift and go to state 107
    FOR             shift and go to state 108
    ON              shift and go to state 109
    RETURN          shift and go to state 110
    ID              shift and go to state 105
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    LCB             shift and go to state 37
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    stmt                           shift and go to state 100
    exp                            shift and go to state 101
    block                          shift and go to state 102
    vardec                         shift and go to state 103
    const                          shift and go to state 27
    relopexp                       shift and go to state 29
    idlist                         shift and go to state 7
    iddec                          shift and go to state 10

state 70

    (75) paramdec -> ID COLON . type
    (6) type -> . INTEGER
    (7) type -> . FLOAT
    (8) type -> . BOOLEAN

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21

    type                           shift and go to state 111

state 71

    (76) paramdec -> ID LSB . RSB COLON type

    RSB             shift and go to state 112


state 72

    (69) funcdec -> FUNCTION ID LRB paramdecs RRB . COLON type block
    (70) funcdec -> FUNCTION ID LRB paramdecs RRB . block
    (30) block -> . LCB stmtlist RCB

    COLON           shift and go to state 113
    LCB             shift and go to state 37

    block                          shift and go to state 114

state 73

    (74) paramdecslist -> paramdecslist COMMA . paramdec
    (75) paramdec -> . ID COLON type
    (76) paramdec -> . ID LSB RSB COLON type

    ID              shift and go to state 39

    paramdec                       shift and go to state 115

state 74

    (14) exp -> ID ASSIGN exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    AND             reduce using rule 14 (exp -> ID ASSIGN exp .)
    OR              reduce using rule 14 (exp -> ID ASSIGN exp .)
    GT              reduce using rule 14 (exp -> ID ASSIGN exp .)
    LT              reduce using rule 14 (exp -> ID ASSIGN exp .)
    NE              reduce using rule 14 (exp -> ID ASSIGN exp .)
    EQ              reduce using rule 14 (exp -> ID ASSIGN exp .)
    LE              reduce using rule 14 (exp -> ID ASSIGN exp .)
    GE              reduce using rule 14 (exp -> ID ASSIGN exp .)
    COLON           reduce using rule 14 (exp -> ID ASSIGN exp .)
    COMMA           reduce using rule 14 (exp -> ID ASSIGN exp .)
    RSB             reduce using rule 14 (exp -> ID ASSIGN exp .)
    RRB             reduce using rule 14 (exp -> ID ASSIGN exp .)
    SEMICOLON       reduce using rule 14 (exp -> ID ASSIGN exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50

  ! SUM             [ reduce using rule 14 (exp -> ID ASSIGN exp .) ]
  ! SUB             [ reduce using rule 14 (exp -> ID ASSIGN exp .) ]
  ! DIV             [ reduce using rule 14 (exp -> ID ASSIGN exp .) ]
  ! MOD             [ reduce using rule 14 (exp -> ID ASSIGN exp .) ]
  ! MUL             [ reduce using rule 14 (exp -> ID ASSIGN exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 75

    (22) exp -> ID LSB exp . RSB
    (23) exp -> ID LSB exp . RSB ASSIGN exp
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    RSB             shift and go to state 116
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58


state 76

    (66) exp -> ID LRB explist . RRB
    (29) explist -> explist . COMMA exp

    RRB             shift and go to state 117
    COMMA           shift and go to state 118


state 77

    (67) exp -> ID LRB RRB .

    SUM             reduce using rule 67 (exp -> ID LRB RRB .)
    SUB             reduce using rule 67 (exp -> ID LRB RRB .)
    DIV             reduce using rule 67 (exp -> ID LRB RRB .)
    MOD             reduce using rule 67 (exp -> ID LRB RRB .)
    MUL             reduce using rule 67 (exp -> ID LRB RRB .)
    AND             reduce using rule 67 (exp -> ID LRB RRB .)
    OR              reduce using rule 67 (exp -> ID LRB RRB .)
    GT              reduce using rule 67 (exp -> ID LRB RRB .)
    LT              reduce using rule 67 (exp -> ID LRB RRB .)
    NE              reduce using rule 67 (exp -> ID LRB RRB .)
    EQ              reduce using rule 67 (exp -> ID LRB RRB .)
    LE              reduce using rule 67 (exp -> ID LRB RRB .)
    GE              reduce using rule 67 (exp -> ID LRB RRB .)
    COLON           reduce using rule 67 (exp -> ID LRB RRB .)
    COMMA           reduce using rule 67 (exp -> ID LRB RRB .)
    RSB             reduce using rule 67 (exp -> ID LRB RRB .)
    RRB             reduce using rule 67 (exp -> ID LRB RRB .)
    SEMICOLON       reduce using rule 67 (exp -> ID LRB RRB .)


state 78

    (28) explist -> exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    RRB             reduce using rule 28 (explist -> exp .)
    COMMA           reduce using rule 28 (explist -> exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58


state 79

    (15) exp -> exp SUM exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    SUM             reduce using rule 15 (exp -> exp SUM exp .)
    SUB             reduce using rule 15 (exp -> exp SUM exp .)
    MOD             reduce using rule 15 (exp -> exp SUM exp .)
    AND             reduce using rule 15 (exp -> exp SUM exp .)
    OR              reduce using rule 15 (exp -> exp SUM exp .)
    GT              reduce using rule 15 (exp -> exp SUM exp .)
    LT              reduce using rule 15 (exp -> exp SUM exp .)
    NE              reduce using rule 15 (exp -> exp SUM exp .)
    EQ              reduce using rule 15 (exp -> exp SUM exp .)
    LE              reduce using rule 15 (exp -> exp SUM exp .)
    GE              reduce using rule 15 (exp -> exp SUM exp .)
    COLON           reduce using rule 15 (exp -> exp SUM exp .)
    COMMA           reduce using rule 15 (exp -> exp SUM exp .)
    RSB             reduce using rule 15 (exp -> exp SUM exp .)
    RRB             reduce using rule 15 (exp -> exp SUM exp .)
    SEMICOLON       reduce using rule 15 (exp -> exp SUM exp .)
    DIV             shift and go to state 48
    MUL             shift and go to state 50

  ! DIV             [ reduce using rule 15 (exp -> exp SUM exp .) ]
  ! MUL             [ reduce using rule 15 (exp -> exp SUM exp .) ]
  ! SUM             [ shift and go to state 46 ]
  ! SUB             [ shift and go to state 47 ]
  ! MOD             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 80

    (16) exp -> exp SUB exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    SUM             reduce using rule 16 (exp -> exp SUB exp .)
    SUB             reduce using rule 16 (exp -> exp SUB exp .)
    MOD             reduce using rule 16 (exp -> exp SUB exp .)
    AND             reduce using rule 16 (exp -> exp SUB exp .)
    OR              reduce using rule 16 (exp -> exp SUB exp .)
    GT              reduce using rule 16 (exp -> exp SUB exp .)
    LT              reduce using rule 16 (exp -> exp SUB exp .)
    NE              reduce using rule 16 (exp -> exp SUB exp .)
    EQ              reduce using rule 16 (exp -> exp SUB exp .)
    LE              reduce using rule 16 (exp -> exp SUB exp .)
    GE              reduce using rule 16 (exp -> exp SUB exp .)
    COLON           reduce using rule 16 (exp -> exp SUB exp .)
    COMMA           reduce using rule 16 (exp -> exp SUB exp .)
    RSB             reduce using rule 16 (exp -> exp SUB exp .)
    RRB             reduce using rule 16 (exp -> exp SUB exp .)
    SEMICOLON       reduce using rule 16 (exp -> exp SUB exp .)
    DIV             shift and go to state 48
    MUL             shift and go to state 50

  ! DIV             [ reduce using rule 16 (exp -> exp SUB exp .) ]
  ! MUL             [ reduce using rule 16 (exp -> exp SUB exp .) ]
  ! SUM             [ shift and go to state 46 ]
  ! SUB             [ shift and go to state 47 ]
  ! MOD             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 81

    (17) exp -> exp DIV exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    SUM             reduce using rule 17 (exp -> exp DIV exp .)
    SUB             reduce using rule 17 (exp -> exp DIV exp .)
    DIV             reduce using rule 17 (exp -> exp DIV exp .)
    MOD             reduce using rule 17 (exp -> exp DIV exp .)
    MUL             reduce using rule 17 (exp -> exp DIV exp .)
    AND             reduce using rule 17 (exp -> exp DIV exp .)
    OR              reduce using rule 17 (exp -> exp DIV exp .)
    GT              reduce using rule 17 (exp -> exp DIV exp .)
    LT              reduce using rule 17 (exp -> exp DIV exp .)
    NE              reduce using rule 17 (exp -> exp DIV exp .)
    EQ              reduce using rule 17 (exp -> exp DIV exp .)
    LE              reduce using rule 17 (exp -> exp DIV exp .)
    GE              reduce using rule 17 (exp -> exp DIV exp .)
    COLON           reduce using rule 17 (exp -> exp DIV exp .)
    COMMA           reduce using rule 17 (exp -> exp DIV exp .)
    RSB             reduce using rule 17 (exp -> exp DIV exp .)
    RRB             reduce using rule 17 (exp -> exp DIV exp .)
    SEMICOLON       reduce using rule 17 (exp -> exp DIV exp .)

  ! SUM             [ shift and go to state 46 ]
  ! SUB             [ shift and go to state 47 ]
  ! DIV             [ shift and go to state 48 ]
  ! MOD             [ shift and go to state 49 ]
  ! MUL             [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 82

    (18) exp -> exp MOD exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    MOD             reduce using rule 18 (exp -> exp MOD exp .)
    AND             reduce using rule 18 (exp -> exp MOD exp .)
    OR              reduce using rule 18 (exp -> exp MOD exp .)
    GT              reduce using rule 18 (exp -> exp MOD exp .)
    LT              reduce using rule 18 (exp -> exp MOD exp .)
    NE              reduce using rule 18 (exp -> exp MOD exp .)
    EQ              reduce using rule 18 (exp -> exp MOD exp .)
    LE              reduce using rule 18 (exp -> exp MOD exp .)
    GE              reduce using rule 18 (exp -> exp MOD exp .)
    COLON           reduce using rule 18 (exp -> exp MOD exp .)
    COMMA           reduce using rule 18 (exp -> exp MOD exp .)
    RSB             reduce using rule 18 (exp -> exp MOD exp .)
    RRB             reduce using rule 18 (exp -> exp MOD exp .)
    SEMICOLON       reduce using rule 18 (exp -> exp MOD exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MUL             shift and go to state 50

  ! SUM             [ reduce using rule 18 (exp -> exp MOD exp .) ]
  ! SUB             [ reduce using rule 18 (exp -> exp MOD exp .) ]
  ! DIV             [ reduce using rule 18 (exp -> exp MOD exp .) ]
  ! MUL             [ reduce using rule 18 (exp -> exp MOD exp .) ]
  ! MOD             [ shift and go to state 49 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 83

    (19) exp -> exp MUL exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    SUM             reduce using rule 19 (exp -> exp MUL exp .)
    SUB             reduce using rule 19 (exp -> exp MUL exp .)
    DIV             reduce using rule 19 (exp -> exp MUL exp .)
    MOD             reduce using rule 19 (exp -> exp MUL exp .)
    MUL             reduce using rule 19 (exp -> exp MUL exp .)
    AND             reduce using rule 19 (exp -> exp MUL exp .)
    OR              reduce using rule 19 (exp -> exp MUL exp .)
    GT              reduce using rule 19 (exp -> exp MUL exp .)
    LT              reduce using rule 19 (exp -> exp MUL exp .)
    NE              reduce using rule 19 (exp -> exp MUL exp .)
    EQ              reduce using rule 19 (exp -> exp MUL exp .)
    LE              reduce using rule 19 (exp -> exp MUL exp .)
    GE              reduce using rule 19 (exp -> exp MUL exp .)
    COLON           reduce using rule 19 (exp -> exp MUL exp .)
    COMMA           reduce using rule 19 (exp -> exp MUL exp .)
    RSB             reduce using rule 19 (exp -> exp MUL exp .)
    RRB             reduce using rule 19 (exp -> exp MUL exp .)
    SEMICOLON       reduce using rule 19 (exp -> exp MUL exp .)

  ! SUM             [ shift and go to state 46 ]
  ! SUB             [ shift and go to state 47 ]
  ! DIV             [ shift and go to state 48 ]
  ! MOD             [ shift and go to state 49 ]
  ! MUL             [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 84

    (61) exp -> exp AND exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    AND             reduce using rule 61 (exp -> exp AND exp .)
    OR              reduce using rule 61 (exp -> exp AND exp .)
    COLON           reduce using rule 61 (exp -> exp AND exp .)
    COMMA           reduce using rule 61 (exp -> exp AND exp .)
    RSB             reduce using rule 61 (exp -> exp AND exp .)
    RRB             reduce using rule 61 (exp -> exp AND exp .)
    SEMICOLON       reduce using rule 61 (exp -> exp AND exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58

  ! SUM             [ reduce using rule 61 (exp -> exp AND exp .) ]
  ! SUB             [ reduce using rule 61 (exp -> exp AND exp .) ]
  ! DIV             [ reduce using rule 61 (exp -> exp AND exp .) ]
  ! MOD             [ reduce using rule 61 (exp -> exp AND exp .) ]
  ! MUL             [ reduce using rule 61 (exp -> exp AND exp .) ]
  ! GT              [ reduce using rule 61 (exp -> exp AND exp .) ]
  ! LT              [ reduce using rule 61 (exp -> exp AND exp .) ]
  ! NE              [ reduce using rule 61 (exp -> exp AND exp .) ]
  ! EQ              [ reduce using rule 61 (exp -> exp AND exp .) ]
  ! LE              [ reduce using rule 61 (exp -> exp AND exp .) ]
  ! GE              [ reduce using rule 61 (exp -> exp AND exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 85

    (62) exp -> exp OR exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    OR              reduce using rule 62 (exp -> exp OR exp .)
    COLON           reduce using rule 62 (exp -> exp OR exp .)
    COMMA           reduce using rule 62 (exp -> exp OR exp .)
    RSB             reduce using rule 62 (exp -> exp OR exp .)
    RRB             reduce using rule 62 (exp -> exp OR exp .)
    SEMICOLON       reduce using rule 62 (exp -> exp OR exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58

  ! SUM             [ reduce using rule 62 (exp -> exp OR exp .) ]
  ! SUB             [ reduce using rule 62 (exp -> exp OR exp .) ]
  ! DIV             [ reduce using rule 62 (exp -> exp OR exp .) ]
  ! MOD             [ reduce using rule 62 (exp -> exp OR exp .) ]
  ! MUL             [ reduce using rule 62 (exp -> exp OR exp .) ]
  ! AND             [ reduce using rule 62 (exp -> exp OR exp .) ]
  ! GT              [ reduce using rule 62 (exp -> exp OR exp .) ]
  ! LT              [ reduce using rule 62 (exp -> exp OR exp .) ]
  ! NE              [ reduce using rule 62 (exp -> exp OR exp .) ]
  ! EQ              [ reduce using rule 62 (exp -> exp OR exp .) ]
  ! LE              [ reduce using rule 62 (exp -> exp OR exp .) ]
  ! GE              [ reduce using rule 62 (exp -> exp OR exp .) ]
  ! OR              [ shift and go to state 52 ]


state 86

    (49) relopexp -> exp GT exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    GT              reduce using rule 49 (relopexp -> exp GT exp .)
    LT              reduce using rule 49 (relopexp -> exp GT exp .)
    NE              reduce using rule 49 (relopexp -> exp GT exp .)
    EQ              reduce using rule 49 (relopexp -> exp GT exp .)
    LE              reduce using rule 49 (relopexp -> exp GT exp .)
    GE              reduce using rule 49 (relopexp -> exp GT exp .)
    AND             reduce using rule 49 (relopexp -> exp GT exp .)
    OR              reduce using rule 49 (relopexp -> exp GT exp .)
    COLON           reduce using rule 49 (relopexp -> exp GT exp .)
    COMMA           reduce using rule 49 (relopexp -> exp GT exp .)
    RSB             reduce using rule 49 (relopexp -> exp GT exp .)
    RRB             reduce using rule 49 (relopexp -> exp GT exp .)
    SEMICOLON       reduce using rule 49 (relopexp -> exp GT exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50

  ! SUM             [ reduce using rule 49 (relopexp -> exp GT exp .) ]
  ! SUB             [ reduce using rule 49 (relopexp -> exp GT exp .) ]
  ! DIV             [ reduce using rule 49 (relopexp -> exp GT exp .) ]
  ! MOD             [ reduce using rule 49 (relopexp -> exp GT exp .) ]
  ! MUL             [ reduce using rule 49 (relopexp -> exp GT exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 87

    (50) relopexp -> exp LT exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    GT              reduce using rule 50 (relopexp -> exp LT exp .)
    LT              reduce using rule 50 (relopexp -> exp LT exp .)
    NE              reduce using rule 50 (relopexp -> exp LT exp .)
    EQ              reduce using rule 50 (relopexp -> exp LT exp .)
    LE              reduce using rule 50 (relopexp -> exp LT exp .)
    GE              reduce using rule 50 (relopexp -> exp LT exp .)
    AND             reduce using rule 50 (relopexp -> exp LT exp .)
    OR              reduce using rule 50 (relopexp -> exp LT exp .)
    COLON           reduce using rule 50 (relopexp -> exp LT exp .)
    COMMA           reduce using rule 50 (relopexp -> exp LT exp .)
    RSB             reduce using rule 50 (relopexp -> exp LT exp .)
    RRB             reduce using rule 50 (relopexp -> exp LT exp .)
    SEMICOLON       reduce using rule 50 (relopexp -> exp LT exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50

  ! SUM             [ reduce using rule 50 (relopexp -> exp LT exp .) ]
  ! SUB             [ reduce using rule 50 (relopexp -> exp LT exp .) ]
  ! DIV             [ reduce using rule 50 (relopexp -> exp LT exp .) ]
  ! MOD             [ reduce using rule 50 (relopexp -> exp LT exp .) ]
  ! MUL             [ reduce using rule 50 (relopexp -> exp LT exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 88

    (51) relopexp -> exp NE exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    GT              reduce using rule 51 (relopexp -> exp NE exp .)
    LT              reduce using rule 51 (relopexp -> exp NE exp .)
    NE              reduce using rule 51 (relopexp -> exp NE exp .)
    EQ              reduce using rule 51 (relopexp -> exp NE exp .)
    LE              reduce using rule 51 (relopexp -> exp NE exp .)
    GE              reduce using rule 51 (relopexp -> exp NE exp .)
    AND             reduce using rule 51 (relopexp -> exp NE exp .)
    OR              reduce using rule 51 (relopexp -> exp NE exp .)
    COLON           reduce using rule 51 (relopexp -> exp NE exp .)
    COMMA           reduce using rule 51 (relopexp -> exp NE exp .)
    RSB             reduce using rule 51 (relopexp -> exp NE exp .)
    RRB             reduce using rule 51 (relopexp -> exp NE exp .)
    SEMICOLON       reduce using rule 51 (relopexp -> exp NE exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50

  ! SUM             [ reduce using rule 51 (relopexp -> exp NE exp .) ]
  ! SUB             [ reduce using rule 51 (relopexp -> exp NE exp .) ]
  ! DIV             [ reduce using rule 51 (relopexp -> exp NE exp .) ]
  ! MOD             [ reduce using rule 51 (relopexp -> exp NE exp .) ]
  ! MUL             [ reduce using rule 51 (relopexp -> exp NE exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 89

    (52) relopexp -> exp EQ exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    GT              reduce using rule 52 (relopexp -> exp EQ exp .)
    LT              reduce using rule 52 (relopexp -> exp EQ exp .)
    NE              reduce using rule 52 (relopexp -> exp EQ exp .)
    EQ              reduce using rule 52 (relopexp -> exp EQ exp .)
    LE              reduce using rule 52 (relopexp -> exp EQ exp .)
    GE              reduce using rule 52 (relopexp -> exp EQ exp .)
    AND             reduce using rule 52 (relopexp -> exp EQ exp .)
    OR              reduce using rule 52 (relopexp -> exp EQ exp .)
    COLON           reduce using rule 52 (relopexp -> exp EQ exp .)
    COMMA           reduce using rule 52 (relopexp -> exp EQ exp .)
    RSB             reduce using rule 52 (relopexp -> exp EQ exp .)
    RRB             reduce using rule 52 (relopexp -> exp EQ exp .)
    SEMICOLON       reduce using rule 52 (relopexp -> exp EQ exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50

  ! SUM             [ reduce using rule 52 (relopexp -> exp EQ exp .) ]
  ! SUB             [ reduce using rule 52 (relopexp -> exp EQ exp .) ]
  ! DIV             [ reduce using rule 52 (relopexp -> exp EQ exp .) ]
  ! MOD             [ reduce using rule 52 (relopexp -> exp EQ exp .) ]
  ! MUL             [ reduce using rule 52 (relopexp -> exp EQ exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 90

    (53) relopexp -> exp LE exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    GT              reduce using rule 53 (relopexp -> exp LE exp .)
    LT              reduce using rule 53 (relopexp -> exp LE exp .)
    NE              reduce using rule 53 (relopexp -> exp LE exp .)
    EQ              reduce using rule 53 (relopexp -> exp LE exp .)
    LE              reduce using rule 53 (relopexp -> exp LE exp .)
    GE              reduce using rule 53 (relopexp -> exp LE exp .)
    AND             reduce using rule 53 (relopexp -> exp LE exp .)
    OR              reduce using rule 53 (relopexp -> exp LE exp .)
    COLON           reduce using rule 53 (relopexp -> exp LE exp .)
    COMMA           reduce using rule 53 (relopexp -> exp LE exp .)
    RSB             reduce using rule 53 (relopexp -> exp LE exp .)
    RRB             reduce using rule 53 (relopexp -> exp LE exp .)
    SEMICOLON       reduce using rule 53 (relopexp -> exp LE exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50

  ! SUM             [ reduce using rule 53 (relopexp -> exp LE exp .) ]
  ! SUB             [ reduce using rule 53 (relopexp -> exp LE exp .) ]
  ! DIV             [ reduce using rule 53 (relopexp -> exp LE exp .) ]
  ! MOD             [ reduce using rule 53 (relopexp -> exp LE exp .) ]
  ! MUL             [ reduce using rule 53 (relopexp -> exp LE exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 91

    (54) relopexp -> exp GE exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    GT              reduce using rule 54 (relopexp -> exp GE exp .)
    LT              reduce using rule 54 (relopexp -> exp GE exp .)
    NE              reduce using rule 54 (relopexp -> exp GE exp .)
    EQ              reduce using rule 54 (relopexp -> exp GE exp .)
    LE              reduce using rule 54 (relopexp -> exp GE exp .)
    GE              reduce using rule 54 (relopexp -> exp GE exp .)
    AND             reduce using rule 54 (relopexp -> exp GE exp .)
    OR              reduce using rule 54 (relopexp -> exp GE exp .)
    COLON           reduce using rule 54 (relopexp -> exp GE exp .)
    COMMA           reduce using rule 54 (relopexp -> exp GE exp .)
    RSB             reduce using rule 54 (relopexp -> exp GE exp .)
    RRB             reduce using rule 54 (relopexp -> exp GE exp .)
    SEMICOLON       reduce using rule 54 (relopexp -> exp GE exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50

  ! SUM             [ reduce using rule 54 (relopexp -> exp GE exp .) ]
  ! SUB             [ reduce using rule 54 (relopexp -> exp GE exp .) ]
  ! DIV             [ reduce using rule 54 (relopexp -> exp GE exp .) ]
  ! MOD             [ reduce using rule 54 (relopexp -> exp GE exp .) ]
  ! MUL             [ reduce using rule 54 (relopexp -> exp GE exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 92

    (25) exp -> LRB exp RRB .

    SUM             reduce using rule 25 (exp -> LRB exp RRB .)
    SUB             reduce using rule 25 (exp -> LRB exp RRB .)
    DIV             reduce using rule 25 (exp -> LRB exp RRB .)
    MOD             reduce using rule 25 (exp -> LRB exp RRB .)
    MUL             reduce using rule 25 (exp -> LRB exp RRB .)
    AND             reduce using rule 25 (exp -> LRB exp RRB .)
    OR              reduce using rule 25 (exp -> LRB exp RRB .)
    GT              reduce using rule 25 (exp -> LRB exp RRB .)
    LT              reduce using rule 25 (exp -> LRB exp RRB .)
    NE              reduce using rule 25 (exp -> LRB exp RRB .)
    EQ              reduce using rule 25 (exp -> LRB exp RRB .)
    LE              reduce using rule 25 (exp -> LRB exp RRB .)
    GE              reduce using rule 25 (exp -> LRB exp RRB .)
    COLON           reduce using rule 25 (exp -> LRB exp RRB .)
    COMMA           reduce using rule 25 (exp -> LRB exp RRB .)
    RSB             reduce using rule 25 (exp -> LRB exp RRB .)
    RRB             reduce using rule 25 (exp -> LRB exp RRB .)
    SEMICOLON       reduce using rule 25 (exp -> LRB exp RRB .)


state 93

    (55) relopexp -> relopexp GT exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    GT              reduce using rule 55 (relopexp -> relopexp GT exp .)
    LT              reduce using rule 55 (relopexp -> relopexp GT exp .)
    NE              reduce using rule 55 (relopexp -> relopexp GT exp .)
    EQ              reduce using rule 55 (relopexp -> relopexp GT exp .)
    LE              reduce using rule 55 (relopexp -> relopexp GT exp .)
    GE              reduce using rule 55 (relopexp -> relopexp GT exp .)
    AND             reduce using rule 55 (relopexp -> relopexp GT exp .)
    OR              reduce using rule 55 (relopexp -> relopexp GT exp .)
    COLON           reduce using rule 55 (relopexp -> relopexp GT exp .)
    COMMA           reduce using rule 55 (relopexp -> relopexp GT exp .)
    RSB             reduce using rule 55 (relopexp -> relopexp GT exp .)
    RRB             reduce using rule 55 (relopexp -> relopexp GT exp .)
    SEMICOLON       reduce using rule 55 (relopexp -> relopexp GT exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50

  ! SUM             [ reduce using rule 55 (relopexp -> relopexp GT exp .) ]
  ! SUB             [ reduce using rule 55 (relopexp -> relopexp GT exp .) ]
  ! DIV             [ reduce using rule 55 (relopexp -> relopexp GT exp .) ]
  ! MOD             [ reduce using rule 55 (relopexp -> relopexp GT exp .) ]
  ! MUL             [ reduce using rule 55 (relopexp -> relopexp GT exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 94

    (56) relopexp -> relopexp LT exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    GT              reduce using rule 56 (relopexp -> relopexp LT exp .)
    LT              reduce using rule 56 (relopexp -> relopexp LT exp .)
    NE              reduce using rule 56 (relopexp -> relopexp LT exp .)
    EQ              reduce using rule 56 (relopexp -> relopexp LT exp .)
    LE              reduce using rule 56 (relopexp -> relopexp LT exp .)
    GE              reduce using rule 56 (relopexp -> relopexp LT exp .)
    AND             reduce using rule 56 (relopexp -> relopexp LT exp .)
    OR              reduce using rule 56 (relopexp -> relopexp LT exp .)
    COLON           reduce using rule 56 (relopexp -> relopexp LT exp .)
    COMMA           reduce using rule 56 (relopexp -> relopexp LT exp .)
    RSB             reduce using rule 56 (relopexp -> relopexp LT exp .)
    RRB             reduce using rule 56 (relopexp -> relopexp LT exp .)
    SEMICOLON       reduce using rule 56 (relopexp -> relopexp LT exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50

  ! SUM             [ reduce using rule 56 (relopexp -> relopexp LT exp .) ]
  ! SUB             [ reduce using rule 56 (relopexp -> relopexp LT exp .) ]
  ! DIV             [ reduce using rule 56 (relopexp -> relopexp LT exp .) ]
  ! MOD             [ reduce using rule 56 (relopexp -> relopexp LT exp .) ]
  ! MUL             [ reduce using rule 56 (relopexp -> relopexp LT exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 95

    (57) relopexp -> relopexp NE exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    GT              reduce using rule 57 (relopexp -> relopexp NE exp .)
    LT              reduce using rule 57 (relopexp -> relopexp NE exp .)
    NE              reduce using rule 57 (relopexp -> relopexp NE exp .)
    EQ              reduce using rule 57 (relopexp -> relopexp NE exp .)
    LE              reduce using rule 57 (relopexp -> relopexp NE exp .)
    GE              reduce using rule 57 (relopexp -> relopexp NE exp .)
    AND             reduce using rule 57 (relopexp -> relopexp NE exp .)
    OR              reduce using rule 57 (relopexp -> relopexp NE exp .)
    COLON           reduce using rule 57 (relopexp -> relopexp NE exp .)
    COMMA           reduce using rule 57 (relopexp -> relopexp NE exp .)
    RSB             reduce using rule 57 (relopexp -> relopexp NE exp .)
    RRB             reduce using rule 57 (relopexp -> relopexp NE exp .)
    SEMICOLON       reduce using rule 57 (relopexp -> relopexp NE exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50

  ! SUM             [ reduce using rule 57 (relopexp -> relopexp NE exp .) ]
  ! SUB             [ reduce using rule 57 (relopexp -> relopexp NE exp .) ]
  ! DIV             [ reduce using rule 57 (relopexp -> relopexp NE exp .) ]
  ! MOD             [ reduce using rule 57 (relopexp -> relopexp NE exp .) ]
  ! MUL             [ reduce using rule 57 (relopexp -> relopexp NE exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 96

    (58) relopexp -> relopexp EQ exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    GT              reduce using rule 58 (relopexp -> relopexp EQ exp .)
    LT              reduce using rule 58 (relopexp -> relopexp EQ exp .)
    NE              reduce using rule 58 (relopexp -> relopexp EQ exp .)
    EQ              reduce using rule 58 (relopexp -> relopexp EQ exp .)
    LE              reduce using rule 58 (relopexp -> relopexp EQ exp .)
    GE              reduce using rule 58 (relopexp -> relopexp EQ exp .)
    AND             reduce using rule 58 (relopexp -> relopexp EQ exp .)
    OR              reduce using rule 58 (relopexp -> relopexp EQ exp .)
    COLON           reduce using rule 58 (relopexp -> relopexp EQ exp .)
    COMMA           reduce using rule 58 (relopexp -> relopexp EQ exp .)
    RSB             reduce using rule 58 (relopexp -> relopexp EQ exp .)
    RRB             reduce using rule 58 (relopexp -> relopexp EQ exp .)
    SEMICOLON       reduce using rule 58 (relopexp -> relopexp EQ exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50

  ! SUM             [ reduce using rule 58 (relopexp -> relopexp EQ exp .) ]
  ! SUB             [ reduce using rule 58 (relopexp -> relopexp EQ exp .) ]
  ! DIV             [ reduce using rule 58 (relopexp -> relopexp EQ exp .) ]
  ! MOD             [ reduce using rule 58 (relopexp -> relopexp EQ exp .) ]
  ! MUL             [ reduce using rule 58 (relopexp -> relopexp EQ exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 97

    (59) relopexp -> relopexp LE exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    GT              reduce using rule 59 (relopexp -> relopexp LE exp .)
    LT              reduce using rule 59 (relopexp -> relopexp LE exp .)
    NE              reduce using rule 59 (relopexp -> relopexp LE exp .)
    EQ              reduce using rule 59 (relopexp -> relopexp LE exp .)
    LE              reduce using rule 59 (relopexp -> relopexp LE exp .)
    GE              reduce using rule 59 (relopexp -> relopexp LE exp .)
    AND             reduce using rule 59 (relopexp -> relopexp LE exp .)
    OR              reduce using rule 59 (relopexp -> relopexp LE exp .)
    COLON           reduce using rule 59 (relopexp -> relopexp LE exp .)
    COMMA           reduce using rule 59 (relopexp -> relopexp LE exp .)
    RSB             reduce using rule 59 (relopexp -> relopexp LE exp .)
    RRB             reduce using rule 59 (relopexp -> relopexp LE exp .)
    SEMICOLON       reduce using rule 59 (relopexp -> relopexp LE exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50

  ! SUM             [ reduce using rule 59 (relopexp -> relopexp LE exp .) ]
  ! SUB             [ reduce using rule 59 (relopexp -> relopexp LE exp .) ]
  ! DIV             [ reduce using rule 59 (relopexp -> relopexp LE exp .) ]
  ! MOD             [ reduce using rule 59 (relopexp -> relopexp LE exp .) ]
  ! MUL             [ reduce using rule 59 (relopexp -> relopexp LE exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 98

    (60) relopexp -> relopexp GE exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    GT              reduce using rule 60 (relopexp -> relopexp GE exp .)
    LT              reduce using rule 60 (relopexp -> relopexp GE exp .)
    NE              reduce using rule 60 (relopexp -> relopexp GE exp .)
    EQ              reduce using rule 60 (relopexp -> relopexp GE exp .)
    LE              reduce using rule 60 (relopexp -> relopexp GE exp .)
    GE              reduce using rule 60 (relopexp -> relopexp GE exp .)
    AND             reduce using rule 60 (relopexp -> relopexp GE exp .)
    OR              reduce using rule 60 (relopexp -> relopexp GE exp .)
    COLON           reduce using rule 60 (relopexp -> relopexp GE exp .)
    COMMA           reduce using rule 60 (relopexp -> relopexp GE exp .)
    RSB             reduce using rule 60 (relopexp -> relopexp GE exp .)
    RRB             reduce using rule 60 (relopexp -> relopexp GE exp .)
    SEMICOLON       reduce using rule 60 (relopexp -> relopexp GE exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50

  ! SUM             [ reduce using rule 60 (relopexp -> relopexp GE exp .) ]
  ! SUB             [ reduce using rule 60 (relopexp -> relopexp GE exp .) ]
  ! DIV             [ reduce using rule 60 (relopexp -> relopexp GE exp .) ]
  ! MOD             [ reduce using rule 60 (relopexp -> relopexp GE exp .) ]
  ! MUL             [ reduce using rule 60 (relopexp -> relopexp GE exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 99

    (30) block -> LCB stmtlist RCB .

    $end            reduce using rule 30 (block -> LCB stmtlist RCB .)
    RCB             reduce using rule 30 (block -> LCB stmtlist RCB .)
    PRINT           reduce using rule 30 (block -> LCB stmtlist RCB .)
    IF              reduce using rule 30 (block -> LCB stmtlist RCB .)
    WHILE           reduce using rule 30 (block -> LCB stmtlist RCB .)
    FOR             reduce using rule 30 (block -> LCB stmtlist RCB .)
    ON              reduce using rule 30 (block -> LCB stmtlist RCB .)
    RETURN          reduce using rule 30 (block -> LCB stmtlist RCB .)
    ID              reduce using rule 30 (block -> LCB stmtlist RCB .)
    SUB             reduce using rule 30 (block -> LCB stmtlist RCB .)
    LRB             reduce using rule 30 (block -> LCB stmtlist RCB .)
    NOT             reduce using rule 30 (block -> LCB stmtlist RCB .)
    LCB             reduce using rule 30 (block -> LCB stmtlist RCB .)
    FLOATNUMBER     reduce using rule 30 (block -> LCB stmtlist RCB .)
    INTEGERNUMBER   reduce using rule 30 (block -> LCB stmtlist RCB .)
    TRUE            reduce using rule 30 (block -> LCB stmtlist RCB .)
    FALSE           reduce using rule 30 (block -> LCB stmtlist RCB .)
    MAIN            reduce using rule 30 (block -> LCB stmtlist RCB .)
    FUNCTION        reduce using rule 30 (block -> LCB stmtlist RCB .)
    ELSE            reduce using rule 30 (block -> LCB stmtlist RCB .)
    ELSEIF          reduce using rule 30 (block -> LCB stmtlist RCB .)
    WHERE           reduce using rule 30 (block -> LCB stmtlist RCB .)


state 100

    (31) stmtlist -> stmtlist stmt .

    RCB             reduce using rule 31 (stmtlist -> stmtlist stmt .)
    PRINT           reduce using rule 31 (stmtlist -> stmtlist stmt .)
    IF              reduce using rule 31 (stmtlist -> stmtlist stmt .)
    WHILE           reduce using rule 31 (stmtlist -> stmtlist stmt .)
    FOR             reduce using rule 31 (stmtlist -> stmtlist stmt .)
    ON              reduce using rule 31 (stmtlist -> stmtlist stmt .)
    RETURN          reduce using rule 31 (stmtlist -> stmtlist stmt .)
    ID              reduce using rule 31 (stmtlist -> stmtlist stmt .)
    SUB             reduce using rule 31 (stmtlist -> stmtlist stmt .)
    LRB             reduce using rule 31 (stmtlist -> stmtlist stmt .)
    NOT             reduce using rule 31 (stmtlist -> stmtlist stmt .)
    LCB             reduce using rule 31 (stmtlist -> stmtlist stmt .)
    FLOATNUMBER     reduce using rule 31 (stmtlist -> stmtlist stmt .)
    INTEGERNUMBER   reduce using rule 31 (stmtlist -> stmtlist stmt .)
    TRUE            reduce using rule 31 (stmtlist -> stmtlist stmt .)
    FALSE           reduce using rule 31 (stmtlist -> stmtlist stmt .)
    WHERE           reduce using rule 31 (stmtlist -> stmtlist stmt .)


state 101

    (33) stmt -> exp . SEMICOLON
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    SEMICOLON       shift and go to state 119
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58


state 102

    (34) stmt -> block .

    RCB             reduce using rule 34 (stmt -> block .)
    PRINT           reduce using rule 34 (stmt -> block .)
    IF              reduce using rule 34 (stmt -> block .)
    WHILE           reduce using rule 34 (stmt -> block .)
    FOR             reduce using rule 34 (stmt -> block .)
    ON              reduce using rule 34 (stmt -> block .)
    RETURN          reduce using rule 34 (stmt -> block .)
    ID              reduce using rule 34 (stmt -> block .)
    SUB             reduce using rule 34 (stmt -> block .)
    LRB             reduce using rule 34 (stmt -> block .)
    NOT             reduce using rule 34 (stmt -> block .)
    LCB             reduce using rule 34 (stmt -> block .)
    FLOATNUMBER     reduce using rule 34 (stmt -> block .)
    INTEGERNUMBER   reduce using rule 34 (stmt -> block .)
    TRUE            reduce using rule 34 (stmt -> block .)
    FALSE           reduce using rule 34 (stmt -> block .)
    ELSE            reduce using rule 34 (stmt -> block .)
    ELSEIF          reduce using rule 34 (stmt -> block .)
    WHERE           reduce using rule 34 (stmt -> block .)


state 103

    (35) stmt -> vardec .

    RCB             reduce using rule 35 (stmt -> vardec .)
    PRINT           reduce using rule 35 (stmt -> vardec .)
    IF              reduce using rule 35 (stmt -> vardec .)
    WHILE           reduce using rule 35 (stmt -> vardec .)
    FOR             reduce using rule 35 (stmt -> vardec .)
    ON              reduce using rule 35 (stmt -> vardec .)
    RETURN          reduce using rule 35 (stmt -> vardec .)
    ID              reduce using rule 35 (stmt -> vardec .)
    SUB             reduce using rule 35 (stmt -> vardec .)
    LRB             reduce using rule 35 (stmt -> vardec .)
    NOT             reduce using rule 35 (stmt -> vardec .)
    LCB             reduce using rule 35 (stmt -> vardec .)
    FLOATNUMBER     reduce using rule 35 (stmt -> vardec .)
    INTEGERNUMBER   reduce using rule 35 (stmt -> vardec .)
    TRUE            reduce using rule 35 (stmt -> vardec .)
    FALSE           reduce using rule 35 (stmt -> vardec .)
    ELSE            reduce using rule 35 (stmt -> vardec .)
    ELSEIF          reduce using rule 35 (stmt -> vardec .)
    WHERE           reduce using rule 35 (stmt -> vardec .)


state 104

    (36) stmt -> PRINT . LRB ID RRB SEMICOLON

    LRB             shift and go to state 120


state 105

    (14) exp -> ID . ASSIGN exp
    (21) exp -> ID .
    (22) exp -> ID . LSB exp RSB
    (23) exp -> ID . LSB exp RSB ASSIGN exp
    (66) exp -> ID . LRB explist RRB
    (67) exp -> ID . LRB RRB
    (9) iddec -> ID .
    (10) iddec -> ID . ASSIGN exp
    (11) iddec -> ID . LSB exp RSB

    ASSIGN          shift and go to state 121
    SEMICOLON       reduce using rule 21 (exp -> ID .)
    SUM             reduce using rule 21 (exp -> ID .)
    SUB             reduce using rule 21 (exp -> ID .)
    DIV             reduce using rule 21 (exp -> ID .)
    MOD             reduce using rule 21 (exp -> ID .)
    MUL             reduce using rule 21 (exp -> ID .)
    AND             reduce using rule 21 (exp -> ID .)
    OR              reduce using rule 21 (exp -> ID .)
    GT              reduce using rule 21 (exp -> ID .)
    LT              reduce using rule 21 (exp -> ID .)
    NE              reduce using rule 21 (exp -> ID .)
    EQ              reduce using rule 21 (exp -> ID .)
    LE              reduce using rule 21 (exp -> ID .)
    GE              reduce using rule 21 (exp -> ID .)
    LSB             shift and go to state 122
    LRB             shift and go to state 45
    COLON           reduce using rule 9 (iddec -> ID .)
    COMMA           reduce using rule 9 (iddec -> ID .)


state 106

    (37) stmt -> IF . LRB exp RRB stmt elseiflist
    (39) stmt -> IF . LRB exp RRB stmt elseiflist ELSE stmt

    LRB             shift and go to state 123


state 107

    (38) stmt -> WHILE . LRB exp RRB stmt

    LRB             shift and go to state 124


state 108

    (40) stmt -> FOR . LRB exp SEMICOLON exp SEMICOLON exp RRB stmt
    (41) stmt -> FOR . LRB ID IN ID RRB stmt

    LRB             shift and go to state 125


state 109

    (42) stmt -> ON . LRB exp RRB LCB cases RCB SEMICOLON

    LRB             shift and go to state 126


state 110

    (77) stmt -> RETURN . exp SEMICOLON
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 127
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 111

    (75) paramdec -> ID COLON type .

    COMMA           reduce using rule 75 (paramdec -> ID COLON type .)
    RRB             reduce using rule 75 (paramdec -> ID COLON type .)


state 112

    (76) paramdec -> ID LSB RSB . COLON type

    COLON           shift and go to state 128


state 113

    (69) funcdec -> FUNCTION ID LRB paramdecs RRB COLON . type block
    (6) type -> . INTEGER
    (7) type -> . FLOAT
    (8) type -> . BOOLEAN

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21

    type                           shift and go to state 129

state 114

    (70) funcdec -> FUNCTION ID LRB paramdecs RRB block .

    MAIN            reduce using rule 70 (funcdec -> FUNCTION ID LRB paramdecs RRB block .)
    FUNCTION        reduce using rule 70 (funcdec -> FUNCTION ID LRB paramdecs RRB block .)
    ID              reduce using rule 70 (funcdec -> FUNCTION ID LRB paramdecs RRB block .)


state 115

    (74) paramdecslist -> paramdecslist COMMA paramdec .

    COMMA           reduce using rule 74 (paramdecslist -> paramdecslist COMMA paramdec .)
    RRB             reduce using rule 74 (paramdecslist -> paramdecslist COMMA paramdec .)


state 116

    (22) exp -> ID LSB exp RSB .
    (23) exp -> ID LSB exp RSB . ASSIGN exp

    SUM             reduce using rule 22 (exp -> ID LSB exp RSB .)
    SUB             reduce using rule 22 (exp -> ID LSB exp RSB .)
    DIV             reduce using rule 22 (exp -> ID LSB exp RSB .)
    MOD             reduce using rule 22 (exp -> ID LSB exp RSB .)
    MUL             reduce using rule 22 (exp -> ID LSB exp RSB .)
    AND             reduce using rule 22 (exp -> ID LSB exp RSB .)
    OR              reduce using rule 22 (exp -> ID LSB exp RSB .)
    GT              reduce using rule 22 (exp -> ID LSB exp RSB .)
    LT              reduce using rule 22 (exp -> ID LSB exp RSB .)
    NE              reduce using rule 22 (exp -> ID LSB exp RSB .)
    EQ              reduce using rule 22 (exp -> ID LSB exp RSB .)
    LE              reduce using rule 22 (exp -> ID LSB exp RSB .)
    GE              reduce using rule 22 (exp -> ID LSB exp RSB .)
    COLON           reduce using rule 22 (exp -> ID LSB exp RSB .)
    COMMA           reduce using rule 22 (exp -> ID LSB exp RSB .)
    RSB             reduce using rule 22 (exp -> ID LSB exp RSB .)
    RRB             reduce using rule 22 (exp -> ID LSB exp RSB .)
    SEMICOLON       reduce using rule 22 (exp -> ID LSB exp RSB .)
    ASSIGN          shift and go to state 130


state 117

    (66) exp -> ID LRB explist RRB .

    SUM             reduce using rule 66 (exp -> ID LRB explist RRB .)
    SUB             reduce using rule 66 (exp -> ID LRB explist RRB .)
    DIV             reduce using rule 66 (exp -> ID LRB explist RRB .)
    MOD             reduce using rule 66 (exp -> ID LRB explist RRB .)
    MUL             reduce using rule 66 (exp -> ID LRB explist RRB .)
    AND             reduce using rule 66 (exp -> ID LRB explist RRB .)
    OR              reduce using rule 66 (exp -> ID LRB explist RRB .)
    GT              reduce using rule 66 (exp -> ID LRB explist RRB .)
    LT              reduce using rule 66 (exp -> ID LRB explist RRB .)
    NE              reduce using rule 66 (exp -> ID LRB explist RRB .)
    EQ              reduce using rule 66 (exp -> ID LRB explist RRB .)
    LE              reduce using rule 66 (exp -> ID LRB explist RRB .)
    GE              reduce using rule 66 (exp -> ID LRB explist RRB .)
    COLON           reduce using rule 66 (exp -> ID LRB explist RRB .)
    COMMA           reduce using rule 66 (exp -> ID LRB explist RRB .)
    RSB             reduce using rule 66 (exp -> ID LRB explist RRB .)
    RRB             reduce using rule 66 (exp -> ID LRB explist RRB .)
    SEMICOLON       reduce using rule 66 (exp -> ID LRB explist RRB .)


state 118

    (29) explist -> explist COMMA . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 131
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 119

    (33) stmt -> exp SEMICOLON .

    RCB             reduce using rule 33 (stmt -> exp SEMICOLON .)
    PRINT           reduce using rule 33 (stmt -> exp SEMICOLON .)
    IF              reduce using rule 33 (stmt -> exp SEMICOLON .)
    WHILE           reduce using rule 33 (stmt -> exp SEMICOLON .)
    FOR             reduce using rule 33 (stmt -> exp SEMICOLON .)
    ON              reduce using rule 33 (stmt -> exp SEMICOLON .)
    RETURN          reduce using rule 33 (stmt -> exp SEMICOLON .)
    ID              reduce using rule 33 (stmt -> exp SEMICOLON .)
    SUB             reduce using rule 33 (stmt -> exp SEMICOLON .)
    LRB             reduce using rule 33 (stmt -> exp SEMICOLON .)
    NOT             reduce using rule 33 (stmt -> exp SEMICOLON .)
    LCB             reduce using rule 33 (stmt -> exp SEMICOLON .)
    FLOATNUMBER     reduce using rule 33 (stmt -> exp SEMICOLON .)
    INTEGERNUMBER   reduce using rule 33 (stmt -> exp SEMICOLON .)
    TRUE            reduce using rule 33 (stmt -> exp SEMICOLON .)
    FALSE           reduce using rule 33 (stmt -> exp SEMICOLON .)
    ELSE            reduce using rule 33 (stmt -> exp SEMICOLON .)
    ELSEIF          reduce using rule 33 (stmt -> exp SEMICOLON .)
    WHERE           reduce using rule 33 (stmt -> exp SEMICOLON .)


state 120

    (36) stmt -> PRINT LRB . ID RRB SEMICOLON

    ID              shift and go to state 132


state 121

    (14) exp -> ID ASSIGN . exp
    (10) iddec -> ID ASSIGN . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 133
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 122

    (22) exp -> ID LSB . exp RSB
    (23) exp -> ID LSB . exp RSB ASSIGN exp
    (11) iddec -> ID LSB . exp RSB
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 134
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 123

    (37) stmt -> IF LRB . exp RRB stmt elseiflist
    (39) stmt -> IF LRB . exp RRB stmt elseiflist ELSE stmt
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 135
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 124

    (38) stmt -> WHILE LRB . exp RRB stmt
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 136
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 125

    (40) stmt -> FOR LRB . exp SEMICOLON exp SEMICOLON exp RRB stmt
    (41) stmt -> FOR LRB . ID IN ID RRB stmt
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 138
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 137
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 126

    (42) stmt -> ON LRB . exp RRB LCB cases RCB SEMICOLON
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 139
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 127

    (77) stmt -> RETURN exp . SEMICOLON
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    SEMICOLON       shift and go to state 140
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58


state 128

    (76) paramdec -> ID LSB RSB COLON . type
    (6) type -> . INTEGER
    (7) type -> . FLOAT
    (8) type -> . BOOLEAN

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21

    type                           shift and go to state 141

state 129

    (69) funcdec -> FUNCTION ID LRB paramdecs RRB COLON type . block
    (30) block -> . LCB stmtlist RCB

    LCB             shift and go to state 37

    block                          shift and go to state 142

state 130

    (23) exp -> ID LSB exp RSB ASSIGN . exp
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 143
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 131

    (29) explist -> explist COMMA exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    RRB             reduce using rule 29 (explist -> explist COMMA exp .)
    COMMA           reduce using rule 29 (explist -> explist COMMA exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58


state 132

    (36) stmt -> PRINT LRB ID . RRB SEMICOLON

    RRB             shift and go to state 144


state 133

    (14) exp -> ID ASSIGN exp .
    (10) iddec -> ID ASSIGN exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    SEMICOLON       reduce using rule 14 (exp -> ID ASSIGN exp .)
    AND             reduce using rule 14 (exp -> ID ASSIGN exp .)
    OR              reduce using rule 14 (exp -> ID ASSIGN exp .)
    GT              reduce using rule 14 (exp -> ID ASSIGN exp .)
    LT              reduce using rule 14 (exp -> ID ASSIGN exp .)
    NE              reduce using rule 14 (exp -> ID ASSIGN exp .)
    EQ              reduce using rule 14 (exp -> ID ASSIGN exp .)
    LE              reduce using rule 14 (exp -> ID ASSIGN exp .)
    GE              reduce using rule 14 (exp -> ID ASSIGN exp .)
    COLON           reduce using rule 10 (iddec -> ID ASSIGN exp .)
    COMMA           reduce using rule 10 (iddec -> ID ASSIGN exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50

  ! SUM             [ reduce using rule 14 (exp -> ID ASSIGN exp .) ]
  ! SUB             [ reduce using rule 14 (exp -> ID ASSIGN exp .) ]
  ! DIV             [ reduce using rule 14 (exp -> ID ASSIGN exp .) ]
  ! MOD             [ reduce using rule 14 (exp -> ID ASSIGN exp .) ]
  ! MUL             [ reduce using rule 14 (exp -> ID ASSIGN exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 134

    (22) exp -> ID LSB exp . RSB
    (23) exp -> ID LSB exp . RSB ASSIGN exp
    (11) iddec -> ID LSB exp . RSB
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    RSB             shift and go to state 145
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58


state 135

    (37) stmt -> IF LRB exp . RRB stmt elseiflist
    (39) stmt -> IF LRB exp . RRB stmt elseiflist ELSE stmt
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    RRB             shift and go to state 146
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58


state 136

    (38) stmt -> WHILE LRB exp . RRB stmt
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    RRB             shift and go to state 147
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58


state 137

    (40) stmt -> FOR LRB exp . SEMICOLON exp SEMICOLON exp RRB stmt
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    SEMICOLON       shift and go to state 148
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58


state 138

    (41) stmt -> FOR LRB ID . IN ID RRB stmt
    (14) exp -> ID . ASSIGN exp
    (21) exp -> ID .
    (22) exp -> ID . LSB exp RSB
    (23) exp -> ID . LSB exp RSB ASSIGN exp
    (66) exp -> ID . LRB explist RRB
    (67) exp -> ID . LRB RRB

    IN              shift and go to state 149
    ASSIGN          shift and go to state 43
    SEMICOLON       reduce using rule 21 (exp -> ID .)
    SUM             reduce using rule 21 (exp -> ID .)
    SUB             reduce using rule 21 (exp -> ID .)
    DIV             reduce using rule 21 (exp -> ID .)
    MOD             reduce using rule 21 (exp -> ID .)
    MUL             reduce using rule 21 (exp -> ID .)
    AND             reduce using rule 21 (exp -> ID .)
    OR              reduce using rule 21 (exp -> ID .)
    GT              reduce using rule 21 (exp -> ID .)
    LT              reduce using rule 21 (exp -> ID .)
    NE              reduce using rule 21 (exp -> ID .)
    EQ              reduce using rule 21 (exp -> ID .)
    LE              reduce using rule 21 (exp -> ID .)
    GE              reduce using rule 21 (exp -> ID .)
    LSB             shift and go to state 44
    LRB             shift and go to state 45


state 139

    (42) stmt -> ON LRB exp . RRB LCB cases RCB SEMICOLON
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    RRB             shift and go to state 150
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58


state 140

    (77) stmt -> RETURN exp SEMICOLON .

    RCB             reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    PRINT           reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    IF              reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    WHILE           reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    FOR             reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    ON              reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    RETURN          reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    ID              reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    SUB             reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    LRB             reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    NOT             reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    LCB             reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    FLOATNUMBER     reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    INTEGERNUMBER   reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    TRUE            reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    FALSE           reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    ELSE            reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    ELSEIF          reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)
    WHERE           reduce using rule 77 (stmt -> RETURN exp SEMICOLON .)


state 141

    (76) paramdec -> ID LSB RSB COLON type .

    COMMA           reduce using rule 76 (paramdec -> ID LSB RSB COLON type .)
    RRB             reduce using rule 76 (paramdec -> ID LSB RSB COLON type .)


state 142

    (69) funcdec -> FUNCTION ID LRB paramdecs RRB COLON type block .

    MAIN            reduce using rule 69 (funcdec -> FUNCTION ID LRB paramdecs RRB COLON type block .)
    FUNCTION        reduce using rule 69 (funcdec -> FUNCTION ID LRB paramdecs RRB COLON type block .)
    ID              reduce using rule 69 (funcdec -> FUNCTION ID LRB paramdecs RRB COLON type block .)


state 143

    (23) exp -> ID LSB exp RSB ASSIGN exp .
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    AND             reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .)
    OR              reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .)
    GT              reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .)
    LT              reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .)
    NE              reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .)
    EQ              reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .)
    LE              reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .)
    GE              reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .)
    COLON           reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .)
    COMMA           reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .)
    RSB             reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .)
    RRB             reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .)
    SEMICOLON       reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .)
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50

  ! SUM             [ reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .) ]
  ! SUB             [ reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .) ]
  ! DIV             [ reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .) ]
  ! MOD             [ reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .) ]
  ! MUL             [ reduce using rule 23 (exp -> ID LSB exp RSB ASSIGN exp .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]
  ! GT              [ shift and go to state 53 ]
  ! LT              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 56 ]
  ! LE              [ shift and go to state 57 ]
  ! GE              [ shift and go to state 58 ]


state 144

    (36) stmt -> PRINT LRB ID RRB . SEMICOLON

    SEMICOLON       shift and go to state 151


state 145

    (22) exp -> ID LSB exp RSB .
    (23) exp -> ID LSB exp RSB . ASSIGN exp
    (11) iddec -> ID LSB exp RSB .

    SEMICOLON       reduce using rule 22 (exp -> ID LSB exp RSB .)
    SUM             reduce using rule 22 (exp -> ID LSB exp RSB .)
    SUB             reduce using rule 22 (exp -> ID LSB exp RSB .)
    DIV             reduce using rule 22 (exp -> ID LSB exp RSB .)
    MOD             reduce using rule 22 (exp -> ID LSB exp RSB .)
    MUL             reduce using rule 22 (exp -> ID LSB exp RSB .)
    AND             reduce using rule 22 (exp -> ID LSB exp RSB .)
    OR              reduce using rule 22 (exp -> ID LSB exp RSB .)
    GT              reduce using rule 22 (exp -> ID LSB exp RSB .)
    LT              reduce using rule 22 (exp -> ID LSB exp RSB .)
    NE              reduce using rule 22 (exp -> ID LSB exp RSB .)
    EQ              reduce using rule 22 (exp -> ID LSB exp RSB .)
    LE              reduce using rule 22 (exp -> ID LSB exp RSB .)
    GE              reduce using rule 22 (exp -> ID LSB exp RSB .)
    ASSIGN          shift and go to state 130
    COLON           reduce using rule 11 (iddec -> ID LSB exp RSB .)
    COMMA           reduce using rule 11 (iddec -> ID LSB exp RSB .)


state 146

    (37) stmt -> IF LRB exp RRB . stmt elseiflist
    (39) stmt -> IF LRB exp RRB . stmt elseiflist ELSE stmt
    (33) stmt -> . exp SEMICOLON
    (34) stmt -> . block
    (35) stmt -> . vardec
    (36) stmt -> . PRINT LRB ID RRB SEMICOLON
    (37) stmt -> . IF LRB exp RRB stmt elseiflist
    (38) stmt -> . WHILE LRB exp RRB stmt
    (39) stmt -> . IF LRB exp RRB stmt elseiflist ELSE stmt
    (40) stmt -> . FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt
    (41) stmt -> . FOR LRB ID IN ID RRB stmt
    (42) stmt -> . ON LRB exp RRB LCB cases RCB SEMICOLON
    (77) stmt -> . RETURN exp SEMICOLON
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (30) block -> . LCB stmtlist RCB
    (5) vardec -> . idlist COLON type SEMICOLON
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp
    (12) idlist -> . iddec
    (13) idlist -> . idlist COMMA iddec
    (9) iddec -> . ID
    (10) iddec -> . ID ASSIGN exp
    (11) iddec -> . ID LSB exp RSB

    PRINT           shift and go to state 104
    IF              shift and go to state 106
    WHILE           shift and go to state 107
    FOR             shift and go to state 108
    ON              shift and go to state 109
    RETURN          shift and go to state 110
    ID              shift and go to state 105
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    LCB             shift and go to state 37
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 101
    stmt                           shift and go to state 152
    block                          shift and go to state 102
    vardec                         shift and go to state 103
    const                          shift and go to state 27
    relopexp                       shift and go to state 29
    idlist                         shift and go to state 7
    iddec                          shift and go to state 10

state 147

    (38) stmt -> WHILE LRB exp RRB . stmt
    (33) stmt -> . exp SEMICOLON
    (34) stmt -> . block
    (35) stmt -> . vardec
    (36) stmt -> . PRINT LRB ID RRB SEMICOLON
    (37) stmt -> . IF LRB exp RRB stmt elseiflist
    (38) stmt -> . WHILE LRB exp RRB stmt
    (39) stmt -> . IF LRB exp RRB stmt elseiflist ELSE stmt
    (40) stmt -> . FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt
    (41) stmt -> . FOR LRB ID IN ID RRB stmt
    (42) stmt -> . ON LRB exp RRB LCB cases RCB SEMICOLON
    (77) stmt -> . RETURN exp SEMICOLON
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (30) block -> . LCB stmtlist RCB
    (5) vardec -> . idlist COLON type SEMICOLON
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp
    (12) idlist -> . iddec
    (13) idlist -> . idlist COMMA iddec
    (9) iddec -> . ID
    (10) iddec -> . ID ASSIGN exp
    (11) iddec -> . ID LSB exp RSB

    PRINT           shift and go to state 104
    IF              shift and go to state 106
    WHILE           shift and go to state 107
    FOR             shift and go to state 108
    ON              shift and go to state 109
    RETURN          shift and go to state 110
    ID              shift and go to state 105
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    LCB             shift and go to state 37
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 101
    stmt                           shift and go to state 153
    block                          shift and go to state 102
    vardec                         shift and go to state 103
    const                          shift and go to state 27
    relopexp                       shift and go to state 29
    idlist                         shift and go to state 7
    iddec                          shift and go to state 10

state 148

    (40) stmt -> FOR LRB exp SEMICOLON . exp SEMICOLON exp RRB stmt
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 154
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 149

    (41) stmt -> FOR LRB ID IN . ID RRB stmt

    ID              shift and go to state 155


state 150

    (42) stmt -> ON LRB exp RRB . LCB cases RCB SEMICOLON

    LCB             shift and go to state 156


state 151

    (36) stmt -> PRINT LRB ID RRB SEMICOLON .

    RCB             reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    PRINT           reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    IF              reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    WHILE           reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    FOR             reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    ON              reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    RETURN          reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    ID              reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    SUB             reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    LRB             reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    NOT             reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    LCB             reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    FLOATNUMBER     reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    INTEGERNUMBER   reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    TRUE            reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    FALSE           reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    ELSE            reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    ELSEIF          reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)
    WHERE           reduce using rule 36 (stmt -> PRINT LRB ID RRB SEMICOLON .)


state 152

    (37) stmt -> IF LRB exp RRB stmt . elseiflist
    (39) stmt -> IF LRB exp RRB stmt . elseiflist ELSE stmt
    (46) elseiflist -> . elseiflist ELSEIF LRB exp RRB stmt
    (47) elseiflist -> .

    ELSE            reduce using rule 47 (elseiflist -> .)
    ELSEIF          reduce using rule 47 (elseiflist -> .)
    RCB             reduce using rule 47 (elseiflist -> .)
    PRINT           reduce using rule 47 (elseiflist -> .)
    IF              reduce using rule 47 (elseiflist -> .)
    WHILE           reduce using rule 47 (elseiflist -> .)
    FOR             reduce using rule 47 (elseiflist -> .)
    ON              reduce using rule 47 (elseiflist -> .)
    RETURN          reduce using rule 47 (elseiflist -> .)
    ID              reduce using rule 47 (elseiflist -> .)
    SUB             reduce using rule 47 (elseiflist -> .)
    LRB             reduce using rule 47 (elseiflist -> .)
    NOT             reduce using rule 47 (elseiflist -> .)
    LCB             reduce using rule 47 (elseiflist -> .)
    FLOATNUMBER     reduce using rule 47 (elseiflist -> .)
    INTEGERNUMBER   reduce using rule 47 (elseiflist -> .)
    TRUE            reduce using rule 47 (elseiflist -> .)
    FALSE           reduce using rule 47 (elseiflist -> .)
    WHERE           reduce using rule 47 (elseiflist -> .)

    elseiflist                     shift and go to state 157

state 153

    (38) stmt -> WHILE LRB exp RRB stmt .

    RCB             reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    PRINT           reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    IF              reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    WHILE           reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    FOR             reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    ON              reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    RETURN          reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    ID              reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    SUB             reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    LRB             reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    NOT             reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    LCB             reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    FLOATNUMBER     reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    INTEGERNUMBER   reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    TRUE            reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    FALSE           reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    ELSE            reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    ELSEIF          reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)
    WHERE           reduce using rule 38 (stmt -> WHILE LRB exp RRB stmt .)


state 154

    (40) stmt -> FOR LRB exp SEMICOLON exp . SEMICOLON exp RRB stmt
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    SEMICOLON       shift and go to state 158
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58


state 155

    (41) stmt -> FOR LRB ID IN ID . RRB stmt

    RRB             shift and go to state 159


state 156

    (42) stmt -> ON LRB exp RRB LCB . cases RCB SEMICOLON
    (44) cases -> . cases case
    (45) cases -> .

    RCB             reduce using rule 45 (cases -> .)
    WHERE           reduce using rule 45 (cases -> .)

    cases                          shift and go to state 160

state 157

    (37) stmt -> IF LRB exp RRB stmt elseiflist .
    (39) stmt -> IF LRB exp RRB stmt elseiflist . ELSE stmt
    (46) elseiflist -> elseiflist . ELSEIF LRB exp RRB stmt

    RCB             reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    PRINT           reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    IF              reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    WHILE           reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    FOR             reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    ON              reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    RETURN          reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    ID              reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    SUB             reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    LRB             reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    NOT             reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    LCB             reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    FLOATNUMBER     reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    INTEGERNUMBER   reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    TRUE            reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    FALSE           reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    WHERE           reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .)
    ELSE            shift and go to state 161
    ELSEIF          shift and go to state 162

  ! ELSE            [ reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .) ]
  ! ELSEIF          [ reduce using rule 37 (stmt -> IF LRB exp RRB stmt elseiflist .) ]


state 158

    (40) stmt -> FOR LRB exp SEMICOLON exp SEMICOLON . exp RRB stmt
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 163
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 159

    (41) stmt -> FOR LRB ID IN ID RRB . stmt
    (33) stmt -> . exp SEMICOLON
    (34) stmt -> . block
    (35) stmt -> . vardec
    (36) stmt -> . PRINT LRB ID RRB SEMICOLON
    (37) stmt -> . IF LRB exp RRB stmt elseiflist
    (38) stmt -> . WHILE LRB exp RRB stmt
    (39) stmt -> . IF LRB exp RRB stmt elseiflist ELSE stmt
    (40) stmt -> . FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt
    (41) stmt -> . FOR LRB ID IN ID RRB stmt
    (42) stmt -> . ON LRB exp RRB LCB cases RCB SEMICOLON
    (77) stmt -> . RETURN exp SEMICOLON
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (30) block -> . LCB stmtlist RCB
    (5) vardec -> . idlist COLON type SEMICOLON
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp
    (12) idlist -> . iddec
    (13) idlist -> . idlist COMMA iddec
    (9) iddec -> . ID
    (10) iddec -> . ID ASSIGN exp
    (11) iddec -> . ID LSB exp RSB

    PRINT           shift and go to state 104
    IF              shift and go to state 106
    WHILE           shift and go to state 107
    FOR             shift and go to state 108
    ON              shift and go to state 109
    RETURN          shift and go to state 110
    ID              shift and go to state 105
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    LCB             shift and go to state 37
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    stmt                           shift and go to state 164
    exp                            shift and go to state 101
    block                          shift and go to state 102
    vardec                         shift and go to state 103
    const                          shift and go to state 27
    relopexp                       shift and go to state 29
    idlist                         shift and go to state 7
    iddec                          shift and go to state 10

state 160

    (42) stmt -> ON LRB exp RRB LCB cases . RCB SEMICOLON
    (44) cases -> cases . case
    (43) case -> . WHERE const COLON stmtlist

    RCB             shift and go to state 165
    WHERE           shift and go to state 167

    case                           shift and go to state 166

state 161

    (39) stmt -> IF LRB exp RRB stmt elseiflist ELSE . stmt
    (33) stmt -> . exp SEMICOLON
    (34) stmt -> . block
    (35) stmt -> . vardec
    (36) stmt -> . PRINT LRB ID RRB SEMICOLON
    (37) stmt -> . IF LRB exp RRB stmt elseiflist
    (38) stmt -> . WHILE LRB exp RRB stmt
    (39) stmt -> . IF LRB exp RRB stmt elseiflist ELSE stmt
    (40) stmt -> . FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt
    (41) stmt -> . FOR LRB ID IN ID RRB stmt
    (42) stmt -> . ON LRB exp RRB LCB cases RCB SEMICOLON
    (77) stmt -> . RETURN exp SEMICOLON
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (30) block -> . LCB stmtlist RCB
    (5) vardec -> . idlist COLON type SEMICOLON
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp
    (12) idlist -> . iddec
    (13) idlist -> . idlist COMMA iddec
    (9) iddec -> . ID
    (10) iddec -> . ID ASSIGN exp
    (11) iddec -> . ID LSB exp RSB

    PRINT           shift and go to state 104
    IF              shift and go to state 106
    WHILE           shift and go to state 107
    FOR             shift and go to state 108
    ON              shift and go to state 109
    RETURN          shift and go to state 110
    ID              shift and go to state 105
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    LCB             shift and go to state 37
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 101
    stmt                           shift and go to state 168
    block                          shift and go to state 102
    vardec                         shift and go to state 103
    const                          shift and go to state 27
    relopexp                       shift and go to state 29
    idlist                         shift and go to state 7
    iddec                          shift and go to state 10

state 162

    (46) elseiflist -> elseiflist ELSEIF . LRB exp RRB stmt

    LRB             shift and go to state 169


state 163

    (40) stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp . RRB stmt
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    RRB             shift and go to state 170
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58


state 164

    (41) stmt -> FOR LRB ID IN ID RRB stmt .

    RCB             reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    PRINT           reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    IF              reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    WHILE           reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    FOR             reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    ON              reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    RETURN          reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    ID              reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    SUB             reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    LRB             reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    NOT             reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    LCB             reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    FLOATNUMBER     reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    INTEGERNUMBER   reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    TRUE            reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    FALSE           reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    ELSE            reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    ELSEIF          reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)
    WHERE           reduce using rule 41 (stmt -> FOR LRB ID IN ID RRB stmt .)


state 165

    (42) stmt -> ON LRB exp RRB LCB cases RCB . SEMICOLON

    SEMICOLON       shift and go to state 171


state 166

    (44) cases -> cases case .

    RCB             reduce using rule 44 (cases -> cases case .)
    WHERE           reduce using rule 44 (cases -> cases case .)


state 167

    (43) case -> WHERE . const COLON stmtlist
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE

    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    const                          shift and go to state 172

state 168

    (39) stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .

    RCB             reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    PRINT           reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    IF              reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    WHILE           reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    FOR             reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    ON              reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    RETURN          reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    ID              reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    SUB             reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    LRB             reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    NOT             reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    LCB             reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    FLOATNUMBER     reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    INTEGERNUMBER   reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    TRUE            reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    FALSE           reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    ELSE            reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    ELSEIF          reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)
    WHERE           reduce using rule 39 (stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt .)


state 169

    (46) elseiflist -> elseiflist ELSEIF LRB . exp RRB stmt
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp

    ID              shift and go to state 24
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 173
    const                          shift and go to state 27
    relopexp                       shift and go to state 29

state 170

    (40) stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB . stmt
    (33) stmt -> . exp SEMICOLON
    (34) stmt -> . block
    (35) stmt -> . vardec
    (36) stmt -> . PRINT LRB ID RRB SEMICOLON
    (37) stmt -> . IF LRB exp RRB stmt elseiflist
    (38) stmt -> . WHILE LRB exp RRB stmt
    (39) stmt -> . IF LRB exp RRB stmt elseiflist ELSE stmt
    (40) stmt -> . FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt
    (41) stmt -> . FOR LRB ID IN ID RRB stmt
    (42) stmt -> . ON LRB exp RRB LCB cases RCB SEMICOLON
    (77) stmt -> . RETURN exp SEMICOLON
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (30) block -> . LCB stmtlist RCB
    (5) vardec -> . idlist COLON type SEMICOLON
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp
    (12) idlist -> . iddec
    (13) idlist -> . idlist COMMA iddec
    (9) iddec -> . ID
    (10) iddec -> . ID ASSIGN exp
    (11) iddec -> . ID LSB exp RSB

    PRINT           shift and go to state 104
    IF              shift and go to state 106
    WHILE           shift and go to state 107
    FOR             shift and go to state 108
    ON              shift and go to state 109
    RETURN          shift and go to state 110
    ID              shift and go to state 105
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    LCB             shift and go to state 37
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 101
    stmt                           shift and go to state 174
    block                          shift and go to state 102
    vardec                         shift and go to state 103
    const                          shift and go to state 27
    relopexp                       shift and go to state 29
    idlist                         shift and go to state 7
    iddec                          shift and go to state 10

state 171

    (42) stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .

    RCB             reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    PRINT           reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    IF              reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    WHILE           reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    FOR             reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    ON              reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    RETURN          reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    ID              reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    SUB             reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    LRB             reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    NOT             reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    LCB             reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    FLOATNUMBER     reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    INTEGERNUMBER   reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    TRUE            reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    FALSE           reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    ELSE            reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    ELSEIF          reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)
    WHERE           reduce using rule 42 (stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON .)


state 172

    (43) case -> WHERE const . COLON stmtlist

    COLON           shift and go to state 175


state 173

    (46) elseiflist -> elseiflist ELSEIF LRB exp . RRB stmt
    (15) exp -> exp . SUM exp
    (16) exp -> exp . SUB exp
    (17) exp -> exp . DIV exp
    (18) exp -> exp . MOD exp
    (19) exp -> exp . MUL exp
    (61) exp -> exp . AND exp
    (62) exp -> exp . OR exp
    (49) relopexp -> exp . GT exp
    (50) relopexp -> exp . LT exp
    (51) relopexp -> exp . NE exp
    (52) relopexp -> exp . EQ exp
    (53) relopexp -> exp . LE exp
    (54) relopexp -> exp . GE exp

    RRB             shift and go to state 176
    SUM             shift and go to state 46
    SUB             shift and go to state 47
    DIV             shift and go to state 48
    MOD             shift and go to state 49
    MUL             shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    GT              shift and go to state 53
    LT              shift and go to state 54
    NE              shift and go to state 55
    EQ              shift and go to state 56
    LE              shift and go to state 57
    GE              shift and go to state 58


state 174

    (40) stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .

    RCB             reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    PRINT           reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    IF              reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    WHILE           reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    FOR             reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    ON              reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    RETURN          reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    ID              reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    SUB             reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    LRB             reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    NOT             reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    LCB             reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    FLOATNUMBER     reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    INTEGERNUMBER   reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    TRUE            reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    FALSE           reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    ELSE            reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    ELSEIF          reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)
    WHERE           reduce using rule 40 (stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt .)


state 175

    (43) case -> WHERE const COLON . stmtlist
    (31) stmtlist -> . stmtlist stmt
    (32) stmtlist -> .

    PRINT           reduce using rule 32 (stmtlist -> .)
    IF              reduce using rule 32 (stmtlist -> .)
    WHILE           reduce using rule 32 (stmtlist -> .)
    FOR             reduce using rule 32 (stmtlist -> .)
    ON              reduce using rule 32 (stmtlist -> .)
    RETURN          reduce using rule 32 (stmtlist -> .)
    ID              reduce using rule 32 (stmtlist -> .)
    SUB             reduce using rule 32 (stmtlist -> .)
    LRB             reduce using rule 32 (stmtlist -> .)
    NOT             reduce using rule 32 (stmtlist -> .)
    LCB             reduce using rule 32 (stmtlist -> .)
    FLOATNUMBER     reduce using rule 32 (stmtlist -> .)
    INTEGERNUMBER   reduce using rule 32 (stmtlist -> .)
    TRUE            reduce using rule 32 (stmtlist -> .)
    FALSE           reduce using rule 32 (stmtlist -> .)
    RCB             reduce using rule 32 (stmtlist -> .)
    WHERE           reduce using rule 32 (stmtlist -> .)

    stmtlist                       shift and go to state 177

state 176

    (46) elseiflist -> elseiflist ELSEIF LRB exp RRB . stmt
    (33) stmt -> . exp SEMICOLON
    (34) stmt -> . block
    (35) stmt -> . vardec
    (36) stmt -> . PRINT LRB ID RRB SEMICOLON
    (37) stmt -> . IF LRB exp RRB stmt elseiflist
    (38) stmt -> . WHILE LRB exp RRB stmt
    (39) stmt -> . IF LRB exp RRB stmt elseiflist ELSE stmt
    (40) stmt -> . FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt
    (41) stmt -> . FOR LRB ID IN ID RRB stmt
    (42) stmt -> . ON LRB exp RRB LCB cases RCB SEMICOLON
    (77) stmt -> . RETURN exp SEMICOLON
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (30) block -> . LCB stmtlist RCB
    (5) vardec -> . idlist COLON type SEMICOLON
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp
    (12) idlist -> . iddec
    (13) idlist -> . idlist COMMA iddec
    (9) iddec -> . ID
    (10) iddec -> . ID ASSIGN exp
    (11) iddec -> . ID LSB exp RSB

    PRINT           shift and go to state 104
    IF              shift and go to state 106
    WHILE           shift and go to state 107
    FOR             shift and go to state 108
    ON              shift and go to state 109
    RETURN          shift and go to state 110
    ID              shift and go to state 105
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    LCB             shift and go to state 37
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    exp                            shift and go to state 101
    stmt                           shift and go to state 178
    block                          shift and go to state 102
    vardec                         shift and go to state 103
    const                          shift and go to state 27
    relopexp                       shift and go to state 29
    idlist                         shift and go to state 7
    iddec                          shift and go to state 10

state 177

    (43) case -> WHERE const COLON stmtlist .
    (31) stmtlist -> stmtlist . stmt
    (33) stmt -> . exp SEMICOLON
    (34) stmt -> . block
    (35) stmt -> . vardec
    (36) stmt -> . PRINT LRB ID RRB SEMICOLON
    (37) stmt -> . IF LRB exp RRB stmt elseiflist
    (38) stmt -> . WHILE LRB exp RRB stmt
    (39) stmt -> . IF LRB exp RRB stmt elseiflist ELSE stmt
    (40) stmt -> . FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt
    (41) stmt -> . FOR LRB ID IN ID RRB stmt
    (42) stmt -> . ON LRB exp RRB LCB cases RCB SEMICOLON
    (77) stmt -> . RETURN exp SEMICOLON
    (14) exp -> . ID ASSIGN exp
    (15) exp -> . exp SUM exp
    (16) exp -> . exp SUB exp
    (17) exp -> . exp DIV exp
    (18) exp -> . exp MOD exp
    (19) exp -> . exp MUL exp
    (20) exp -> . const
    (21) exp -> . ID
    (22) exp -> . ID LSB exp RSB
    (23) exp -> . ID LSB exp RSB ASSIGN exp
    (24) exp -> . SUB exp
    (25) exp -> . LRB exp RRB
    (48) exp -> . relopexp
    (61) exp -> . exp AND exp
    (62) exp -> . exp OR exp
    (63) exp -> . NOT exp
    (66) exp -> . ID LRB explist RRB
    (67) exp -> . ID LRB RRB
    (30) block -> . LCB stmtlist RCB
    (5) vardec -> . idlist COLON type SEMICOLON
    (26) const -> . FLOATNUMBER
    (27) const -> . INTEGERNUMBER
    (64) const -> . TRUE
    (65) const -> . FALSE
    (49) relopexp -> . exp GT exp
    (50) relopexp -> . exp LT exp
    (51) relopexp -> . exp NE exp
    (52) relopexp -> . exp EQ exp
    (53) relopexp -> . exp LE exp
    (54) relopexp -> . exp GE exp
    (55) relopexp -> . relopexp GT exp
    (56) relopexp -> . relopexp LT exp
    (57) relopexp -> . relopexp NE exp
    (58) relopexp -> . relopexp EQ exp
    (59) relopexp -> . relopexp LE exp
    (60) relopexp -> . relopexp GE exp
    (12) idlist -> . iddec
    (13) idlist -> . idlist COMMA iddec
    (9) iddec -> . ID
    (10) iddec -> . ID ASSIGN exp
    (11) iddec -> . ID LSB exp RSB

    RCB             reduce using rule 43 (case -> WHERE const COLON stmtlist .)
    WHERE           reduce using rule 43 (case -> WHERE const COLON stmtlist .)
    PRINT           shift and go to state 104
    IF              shift and go to state 106
    WHILE           shift and go to state 107
    FOR             shift and go to state 108
    ON              shift and go to state 109
    RETURN          shift and go to state 110
    ID              shift and go to state 105
    SUB             shift and go to state 26
    LRB             shift and go to state 28
    NOT             shift and go to state 30
    LCB             shift and go to state 37
    FLOATNUMBER     shift and go to state 31
    INTEGERNUMBER   shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    const                          shift and go to state 27
    stmt                           shift and go to state 100
    exp                            shift and go to state 101
    block                          shift and go to state 102
    vardec                         shift and go to state 103
    relopexp                       shift and go to state 29
    idlist                         shift and go to state 7
    iddec                          shift and go to state 10

state 178

    (46) elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .

    ELSE            reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    ELSEIF          reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    RCB             reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    PRINT           reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    IF              reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    WHILE           reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    FOR             reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    ON              reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    RETURN          reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    ID              reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    SUB             reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    LRB             reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    NOT             reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    LCB             reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    FLOATNUMBER     reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    INTEGERNUMBER   reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    TRUE            reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    FALSE           reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)
    WHERE           reduce using rule 46 (elseiflist -> elseiflist ELSEIF LRB exp RRB stmt .)

