
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNleftORleftANDleftNOTleftEXPleftGTLTNEEQLEGEleftMODleftSUMSUBleftMULDIVleftIFREDUCEleftELSEELSEIFAND ASSIGN BOOLEAN COLON COMMA DIV ELSE ELSEIF EQ ERROR FALSE FLOAT FLOATNUMBER FOR FUNCTION GE GT ID IF IN INTEGER INTEGERNUMBER LCB LE LRB LSB LT MAIN MOD MUL NE NOT ON OR PRINT RCB RETURN RRB RSB SEMICOLON SUB SUM TRUE WHERE WHILEprogram : declist MAIN LRB RRB block\n        declist :\n        \n        declist : declist dec\n        \n        dec : vardec\n        \n        vardec : idlist COLON type SEMICOLON\n        \n        type : INTEGER\n        type : FLOAT\n        type : BOOLEAN\n        \n        iddec : ID\n        \n        iddec : ID ASSIGN exp\n        \n        iddec : ID LSB exp RSB\n        \n        idlist : iddec\n        \n        idlist : idlist COMMA iddec\n        exp : ID ASSIGN exp\n        exp : exp SUM exp\n        exp : exp SUB exp\n        exp : exp DIV exp\n        exp : exp MOD exp\n        exp : exp MUL exp\n        exp : constexp : IDexp : ID LSB exp RSBexp : ID LSB exp RSB ASSIGN expexp : SUB expexp : LRB exp RRB\n        const : FLOATNUMBER\n        const : INTEGERNUMBER\n        \n        block : LCB stmtlist RCB\n        \n        stmtlist : stmtlist stmt\n        stmtlist :\n        stmt : exp SEMICOLON\n        \n        stmt : block\n        \n        stmt : vardec\n        \n        stmt : PRINT LRB ID RRB SEMICOLON\n        stmt : IF LRB exp RRB stmt elseiflist %prec IFREDUCEstmt : WHILE LRB exp RRB stmtstmt : IF LRB exp RRB stmt elseiflist ELSE stmtstmt : FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmtstmt : FOR LRB ID IN ID RRB stmtstmt : ON LRB exp RRB LCB cases RCB SEMICOLON\n        case : WHERE const COLON stmtlist\n        cases : cases casecases :\n        elseiflist : elseiflist ELSEIF LRB exp RRB stmt\n        elseiflist :exp : relopexp %prec EXP\n        relopexp : exp GT exp\n        relopexp : exp LT exp\n        relopexp : exp NE exp\n        relopexp : exp EQ exp\n        relopexp : exp LE exp\n        relopexp : exp GE exp\n        \n        relopexp : relopexp GT exp\n        relopexp : relopexp LT exp\n        relopexp : relopexp NE exp\n        relopexp : relopexp EQ exp\n        relopexp : relopexp LE exp\n        relopexp : relopexp GE exp\n        exp : exp AND expexp : exp OR expexp : NOT exp\n        const : TRUE\n        const : FALSE\n        \n        paramdecs : paramdecslist\n        \n        paramdecs :\n        \n        paramdecslist : paramdec\n        \n        paramdecslist : paramdecslist COMMA paramdec\n        \n        paramdec : ID COLON type\n        paramdec : ID LSB RSB COLON type\n        \n        exp : ID LRB RRB\n        exp : ID LRB explist RRB\n        funcdec : FUNCTION ID LRB paramdecs RRB block\n        \n        funcdec : FUNCTION ID LRB paramdecs RRB COLON type block\n        \n        explist : exp\n        \n        explist : explist COMMA exp\n        \n        dec : funcdec\n        \n        stmt : RETURN exp SEMICOLON\n        '
    
_lr_action_items = {'MAIN':([0,2,4,5,6,38,99,113,142,],[-2,3,-3,-4,-76,-5,-28,-72,-73,]),'FUNCTION':([0,2,4,5,6,38,99,113,142,],[-2,8,-3,-4,-76,-5,-28,-72,-73,]),'ID':([0,2,4,5,6,8,13,15,16,23,26,28,30,37,38,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,69,73,99,100,102,103,110,113,118,119,120,121,122,123,124,125,126,130,140,142,146,147,148,149,151,152,153,157,158,159,161,164,168,169,170,171,174,175,176,177,178,],[-2,9,-3,-4,-76,14,9,24,24,39,24,24,24,-30,-5,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,105,39,-28,-29,-32,-33,24,-72,24,-31,132,24,24,24,24,138,24,24,-77,-73,105,105,24,155,-34,-45,-36,-35,24,105,105,-39,-37,24,105,-40,-38,-30,105,105,-44,]),'$end':([1,36,99,],[0,-1,-28,]),'LRB':([3,14,15,16,24,26,28,30,37,38,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,69,99,100,102,103,104,105,106,107,108,109,110,118,119,121,122,123,124,125,126,130,138,140,146,147,148,151,152,153,157,158,159,161,162,164,168,169,170,171,174,175,176,177,178,],[11,23,28,28,45,28,28,28,-30,-5,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-28,-29,-32,-33,120,45,123,124,125,126,28,28,-31,28,28,28,28,28,28,28,45,-77,28,28,28,-34,-45,-36,-35,28,28,28,169,-39,-37,28,28,-40,-38,-30,28,28,-44,]),'COLON':([7,9,10,22,24,25,27,29,31,32,33,34,39,59,67,68,72,74,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,112,116,117,133,143,145,172,],[12,-9,-12,-13,-21,-10,-20,-46,-26,-27,-62,-63,70,-24,-61,-11,114,-14,-70,-15,-16,-17,-18,-19,-59,-60,-47,-48,-49,-50,-51,-52,-25,-53,-54,-55,-56,-57,-58,-9,128,-22,-71,-10,-23,-11,175,]),'COMMA':([7,9,10,19,20,21,22,24,25,27,29,31,32,33,34,41,42,59,67,68,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,111,115,116,117,131,133,141,143,145,],[13,-9,-12,-6,-7,-8,-13,-21,-10,-20,-46,-26,-27,-62,-63,73,-66,-24,-61,-11,-14,-70,118,-74,-15,-16,-17,-18,-19,-59,-60,-47,-48,-49,-50,-51,-52,-25,-53,-54,-55,-56,-57,-58,-9,-68,-67,-22,-71,-75,-10,-69,-23,-11,]),'ASSIGN':([9,24,105,116,138,145,],[15,43,121,130,43,130,]),'LSB':([9,24,39,105,138,],[16,44,71,122,44,]),'RRB':([11,19,20,21,23,24,27,29,31,32,33,34,40,41,42,45,59,60,67,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,111,115,116,117,131,132,135,136,139,141,143,155,163,173,],[17,-6,-7,-8,-65,-21,-20,-46,-26,-27,-62,-63,72,-64,-66,76,-24,92,-61,-14,-70,117,-74,-15,-16,-17,-18,-19,-59,-60,-47,-48,-49,-50,-51,-52,-25,-53,-54,-55,-56,-57,-58,-68,-67,-22,-71,-75,144,146,147,150,-69,-23,159,170,176,]),'INTEGER':([12,70,114,128,],[19,19,19,19,]),'FLOAT':([12,70,114,128,],[20,20,20,20,]),'BOOLEAN':([12,70,114,128,],[21,21,21,21,]),'SUB':([15,16,24,25,26,27,28,29,30,31,32,33,34,35,37,38,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,110,116,117,118,119,121,122,123,124,125,126,127,130,131,133,134,135,136,137,138,139,140,143,145,146,147,148,151,152,153,154,157,158,159,161,163,164,168,169,170,171,173,174,175,176,177,178,],[26,26,-21,47,26,-20,26,-46,26,-26,-27,-62,-63,47,-30,-5,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-24,47,26,26,26,26,26,26,47,26,47,47,-70,47,-15,-16,-17,47,-19,47,47,47,47,47,47,47,47,-25,47,47,47,47,47,47,-28,-29,47,-32,-33,-21,26,-22,-71,26,-31,26,26,26,26,26,26,47,26,47,47,47,47,47,47,-21,47,-77,47,-22,26,26,26,-34,-45,-36,47,-35,26,26,26,47,-39,-37,26,26,-40,47,-38,-30,26,26,-44,]),'NOT':([15,16,26,28,30,37,38,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,69,99,100,102,103,110,118,119,121,122,123,124,125,126,130,140,146,147,148,151,152,153,157,158,159,161,164,168,169,170,171,174,175,176,177,178,],[30,30,30,30,30,-30,-5,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-28,-29,-32,-33,30,30,-31,30,30,30,30,30,30,30,-77,30,30,30,-34,-45,-36,-35,30,30,30,-39,-37,30,30,-40,-38,-30,30,30,-44,]),'FLOATNUMBER':([15,16,26,28,30,37,38,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,69,99,100,102,103,110,118,119,121,122,123,124,125,126,130,140,146,147,148,151,152,153,157,158,159,161,164,167,168,169,170,171,174,175,176,177,178,],[31,31,31,31,31,-30,-5,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-28,-29,-32,-33,31,31,-31,31,31,31,31,31,31,31,-77,31,31,31,-34,-45,-36,-35,31,31,31,-39,31,-37,31,31,-40,-38,-30,31,31,-44,]),'INTEGERNUMBER':([15,16,26,28,30,37,38,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,69,99,100,102,103,110,118,119,121,122,123,124,125,126,130,140,146,147,148,151,152,153,157,158,159,161,164,167,168,169,170,171,174,175,176,177,178,],[32,32,32,32,32,-30,-5,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-28,-29,-32,-33,32,32,-31,32,32,32,32,32,32,32,-77,32,32,32,-34,-45,-36,-35,32,32,32,-39,32,-37,32,32,-40,-38,-30,32,32,-44,]),'TRUE':([15,16,26,28,30,37,38,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,69,99,100,102,103,110,118,119,121,122,123,124,125,126,130,140,146,147,148,151,152,153,157,158,159,161,164,167,168,169,170,171,174,175,176,177,178,],[33,33,33,33,33,-30,-5,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-28,-29,-32,-33,33,33,-31,33,33,33,33,33,33,33,-77,33,33,33,-34,-45,-36,-35,33,33,33,-39,33,-37,33,33,-40,-38,-30,33,33,-44,]),'FALSE':([15,16,26,28,30,37,38,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,69,99,100,102,103,110,118,119,121,122,123,124,125,126,130,140,146,147,148,151,152,153,157,158,159,161,164,167,168,169,170,171,174,175,176,177,178,],[34,34,34,34,34,-30,-5,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-28,-29,-32,-33,34,34,-31,34,34,34,34,34,34,34,-77,34,34,34,-34,-45,-36,-35,34,34,34,-39,34,-37,34,34,-40,-38,-30,34,34,-44,]),'LCB':([17,19,20,21,37,38,69,72,99,100,102,103,119,129,140,146,147,150,151,152,153,157,159,161,164,168,170,171,174,175,176,177,178,],[37,-6,-7,-8,-30,-5,37,37,-28,-29,-32,-33,-31,37,-77,37,37,156,-34,-45,-36,-35,37,37,-39,-37,37,-40,-38,-30,37,37,-44,]),'SEMICOLON':([18,19,20,21,24,27,29,31,32,33,34,59,67,74,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,105,116,117,127,133,137,138,143,144,145,154,165,],[38,-6,-7,-8,-21,-20,-46,-26,-27,-62,-63,-24,-61,-14,-70,-15,-16,-17,-18,-19,-59,-60,-47,-48,-49,-50,-51,-52,-25,-53,-54,-55,-56,-57,-58,119,-21,-22,-71,140,-14,148,-21,-23,151,-22,158,171,]),'SUM':([24,25,27,29,31,32,33,34,35,59,60,67,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,105,116,117,127,131,133,134,135,136,137,138,139,143,145,154,163,173,],[-21,46,-20,-46,-26,-27,-62,-63,46,-24,46,46,46,46,-70,46,-15,-16,-17,46,-19,46,46,46,46,46,46,46,46,-25,46,46,46,46,46,46,46,-21,-22,-71,46,46,46,46,46,46,46,-21,46,46,-22,46,46,46,]),'DIV':([24,25,27,29,31,32,33,34,35,59,60,67,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,105,116,117,127,131,133,134,135,136,137,138,139,143,145,154,163,173,],[-21,48,-20,-46,-26,-27,-62,-63,48,48,48,48,48,48,-70,48,48,48,-17,48,-19,48,48,48,48,48,48,48,48,-25,48,48,48,48,48,48,48,-21,-22,-71,48,48,48,48,48,48,48,-21,48,48,-22,48,48,48,]),'MOD':([24,25,27,29,31,32,33,34,35,59,60,67,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,105,116,117,127,131,133,134,135,136,137,138,139,143,145,154,163,173,],[-21,49,-20,-46,-26,-27,-62,-63,49,-24,49,49,49,49,-70,49,-15,-16,-17,-18,-19,49,49,49,49,49,49,49,49,-25,49,49,49,49,49,49,49,-21,-22,-71,49,49,49,49,49,49,49,-21,49,49,-22,49,49,49,]),'MUL':([24,25,27,29,31,32,33,34,35,59,60,67,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,105,116,117,127,131,133,134,135,136,137,138,139,143,145,154,163,173,],[-21,50,-20,-46,-26,-27,-62,-63,50,50,50,50,50,50,-70,50,50,50,-17,50,-19,50,50,50,50,50,50,50,50,-25,50,50,50,50,50,50,50,-21,-22,-71,50,50,50,50,50,50,50,-21,50,50,-22,50,50,50,]),'AND':([24,25,27,29,31,32,33,34,35,59,60,67,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,105,116,117,127,131,133,134,135,136,137,138,139,143,145,154,163,173,],[-21,51,-20,-46,-26,-27,-62,-63,51,-24,51,-61,51,51,-70,51,-15,-16,-17,-18,-19,-59,51,-47,-48,-49,-50,-51,-52,-25,-53,-54,-55,-56,-57,-58,51,-21,-22,-71,51,51,51,51,51,51,51,-21,51,51,-22,51,51,51,]),'OR':([24,25,27,29,31,32,33,34,35,59,60,67,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,105,116,117,127,131,133,134,135,136,137,138,139,143,145,154,163,173,],[-21,52,-20,-46,-26,-27,-62,-63,52,-24,52,-61,52,52,-70,52,-15,-16,-17,-18,-19,-59,-60,-47,-48,-49,-50,-51,-52,-25,-53,-54,-55,-56,-57,-58,52,-21,-22,-71,52,52,52,52,52,52,52,-21,52,52,-22,52,52,52,]),'GT':([24,25,27,29,31,32,33,34,35,59,60,67,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,105,116,117,127,131,133,134,135,136,137,138,139,143,145,154,163,173,],[-21,53,-20,61,-26,-27,-62,-63,53,-24,53,53,53,53,-70,53,-15,-16,-17,-18,-19,53,53,-47,-48,-49,-50,-51,-52,-25,-53,-54,-55,-56,-57,-58,53,-21,-22,-71,53,53,53,53,53,53,53,-21,53,53,-22,53,53,53,]),'LT':([24,25,27,29,31,32,33,34,35,59,60,67,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,105,116,117,127,131,133,134,135,136,137,138,139,143,145,154,163,173,],[-21,54,-20,62,-26,-27,-62,-63,54,-24,54,54,54,54,-70,54,-15,-16,-17,-18,-19,54,54,-47,-48,-49,-50,-51,-52,-25,-53,-54,-55,-56,-57,-58,54,-21,-22,-71,54,54,54,54,54,54,54,-21,54,54,-22,54,54,54,]),'NE':([24,25,27,29,31,32,33,34,35,59,60,67,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,105,116,117,127,131,133,134,135,136,137,138,139,143,145,154,163,173,],[-21,55,-20,63,-26,-27,-62,-63,55,-24,55,55,55,55,-70,55,-15,-16,-17,-18,-19,55,55,-47,-48,-49,-50,-51,-52,-25,-53,-54,-55,-56,-57,-58,55,-21,-22,-71,55,55,55,55,55,55,55,-21,55,55,-22,55,55,55,]),'EQ':([24,25,27,29,31,32,33,34,35,59,60,67,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,105,116,117,127,131,133,134,135,136,137,138,139,143,145,154,163,173,],[-21,56,-20,64,-26,-27,-62,-63,56,-24,56,56,56,56,-70,56,-15,-16,-17,-18,-19,56,56,-47,-48,-49,-50,-51,-52,-25,-53,-54,-55,-56,-57,-58,56,-21,-22,-71,56,56,56,56,56,56,56,-21,56,56,-22,56,56,56,]),'LE':([24,25,27,29,31,32,33,34,35,59,60,67,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,105,116,117,127,131,133,134,135,136,137,138,139,143,145,154,163,173,],[-21,57,-20,65,-26,-27,-62,-63,57,-24,57,57,57,57,-70,57,-15,-16,-17,-18,-19,57,57,-47,-48,-49,-50,-51,-52,-25,-53,-54,-55,-56,-57,-58,57,-21,-22,-71,57,57,57,57,57,57,57,-21,57,57,-22,57,57,57,]),'GE':([24,25,27,29,31,32,33,34,35,59,60,67,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,105,116,117,127,131,133,134,135,136,137,138,139,143,145,154,163,173,],[-21,58,-20,66,-26,-27,-62,-63,58,-24,58,58,58,58,-70,58,-15,-16,-17,-18,-19,58,58,-47,-48,-49,-50,-51,-52,-25,-53,-54,-55,-56,-57,-58,58,-21,-22,-71,58,58,58,58,58,58,58,-21,58,58,-22,58,58,58,]),'RSB':([24,27,29,31,32,33,34,35,59,67,71,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,116,117,134,143,],[-21,-20,-46,-26,-27,-62,-63,68,-24,-61,112,-14,116,-70,-15,-16,-17,-18,-19,-59,-60,-47,-48,-49,-50,-51,-52,-25,-53,-54,-55,-56,-57,-58,-22,-71,145,-23,]),'RCB':([37,38,69,99,100,102,103,119,140,151,152,153,156,157,160,164,166,168,171,174,175,177,178,],[-30,-5,99,-28,-29,-32,-33,-31,-77,-34,-45,-36,-43,-35,165,-39,-42,-37,-40,-38,-30,-41,-44,]),'PRINT':([37,38,69,99,100,102,103,119,140,146,147,151,152,153,157,159,161,164,168,170,171,174,175,176,177,178,],[-30,-5,104,-28,-29,-32,-33,-31,-77,104,104,-34,-45,-36,-35,104,104,-39,-37,104,-40,-38,-30,104,104,-44,]),'IF':([37,38,69,99,100,102,103,119,140,146,147,151,152,153,157,159,161,164,168,170,171,174,175,176,177,178,],[-30,-5,106,-28,-29,-32,-33,-31,-77,106,106,-34,-45,-36,-35,106,106,-39,-37,106,-40,-38,-30,106,106,-44,]),'WHILE':([37,38,69,99,100,102,103,119,140,146,147,151,152,153,157,159,161,164,168,170,171,174,175,176,177,178,],[-30,-5,107,-28,-29,-32,-33,-31,-77,107,107,-34,-45,-36,-35,107,107,-39,-37,107,-40,-38,-30,107,107,-44,]),'FOR':([37,38,69,99,100,102,103,119,140,146,147,151,152,153,157,159,161,164,168,170,171,174,175,176,177,178,],[-30,-5,108,-28,-29,-32,-33,-31,-77,108,108,-34,-45,-36,-35,108,108,-39,-37,108,-40,-38,-30,108,108,-44,]),'ON':([37,38,69,99,100,102,103,119,140,146,147,151,152,153,157,159,161,164,168,170,171,174,175,176,177,178,],[-30,-5,109,-28,-29,-32,-33,-31,-77,109,109,-34,-45,-36,-35,109,109,-39,-37,109,-40,-38,-30,109,109,-44,]),'RETURN':([37,38,69,99,100,102,103,119,140,146,147,151,152,153,157,159,161,164,168,170,171,174,175,176,177,178,],[-30,-5,110,-28,-29,-32,-33,-31,-77,110,110,-34,-45,-36,-35,110,110,-39,-37,110,-40,-38,-30,110,110,-44,]),'ELSE':([38,99,102,103,119,140,151,152,153,157,164,168,171,174,178,],[-5,-28,-32,-33,-31,-77,-34,-45,-36,161,-39,-37,-40,-38,-44,]),'ELSEIF':([38,99,102,103,119,140,151,152,153,157,164,168,171,174,178,],[-5,-28,-32,-33,-31,-77,-34,-45,-36,162,-39,-37,-40,-38,-44,]),'WHERE':([38,99,100,102,103,119,140,151,152,153,156,157,160,164,166,168,171,174,175,177,178,],[-5,-28,-29,-32,-33,-31,-77,-34,-45,-36,-43,-35,167,-39,-42,-37,-40,-38,-30,-41,-44,]),'IN':([138,],[149,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declist':([0,],[2,]),'dec':([2,],[4,]),'vardec':([2,69,146,147,159,161,170,176,177,],[5,103,103,103,103,103,103,103,103,]),'funcdec':([2,],[6,]),'idlist':([2,69,146,147,159,161,170,176,177,],[7,7,7,7,7,7,7,7,7,]),'iddec':([2,13,69,146,147,159,161,170,176,177,],[10,22,10,10,10,10,10,10,10,10,]),'type':([12,70,114,128,],[18,111,129,141,]),'exp':([15,16,26,28,30,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,69,110,118,121,122,123,124,125,126,130,146,147,148,158,159,161,169,170,176,177,],[25,35,59,60,67,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,101,127,131,133,134,135,136,137,139,143,101,101,154,163,101,101,173,101,101,101,]),'const':([15,16,26,28,30,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,69,110,118,121,122,123,124,125,126,130,146,147,148,158,159,161,167,169,170,176,177,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,172,27,27,27,27,]),'relopexp':([15,16,26,28,30,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,69,110,118,121,122,123,124,125,126,130,146,147,148,158,159,161,169,170,176,177,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'block':([17,69,72,129,146,147,159,161,170,176,177,],[36,102,113,142,102,102,102,102,102,102,102,]),'paramdecs':([23,],[40,]),'paramdecslist':([23,],[41,]),'paramdec':([23,73,],[42,115,]),'stmtlist':([37,175,],[69,177,]),'explist':([45,],[77,]),'stmt':([69,146,147,159,161,170,176,177,],[100,152,153,164,168,174,178,100,]),'elseiflist':([152,],[157,]),'cases':([156,],[160,]),'case':([160,],[166,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declist MAIN LRB RRB block','program',5,'p_program','pars.py',16),
  ('declist -> <empty>','declist',0,'p_declist_empty','pars.py',21),
  ('declist -> declist dec','declist',2,'p_declist','pars.py',27),
  ('dec -> vardec','dec',1,'p_dec_vardec','pars.py',34),
  ('vardec -> idlist COLON type SEMICOLON','vardec',4,'p_vardec','pars.py',40),
  ('type -> INTEGER','type',1,'p_type','pars.py',46),
  ('type -> FLOAT','type',1,'p_type','pars.py',47),
  ('type -> BOOLEAN','type',1,'p_type','pars.py',48),
  ('iddec -> ID','iddec',1,'p_iddec_ID','pars.py',54),
  ('iddec -> ID ASSIGN exp','iddec',3,'p_iddec_assign','pars.py',61),
  ('iddec -> ID LSB exp RSB','iddec',4,'p_iddec_array','pars.py',67),
  ('idlist -> iddec','idlist',1,'p_idlist','pars.py',73),
  ('idlist -> idlist COMMA iddec','idlist',3,'p_idlist_comma','pars.py',79),
  ('exp -> ID ASSIGN exp','exp',3,'p_exp_assign','pars.py',84),
  ('exp -> exp SUM exp','exp',3,'p_exp_arithmetic','pars.py',89),
  ('exp -> exp SUB exp','exp',3,'p_exp_arithmetic','pars.py',90),
  ('exp -> exp DIV exp','exp',3,'p_exp_arithmetic','pars.py',91),
  ('exp -> exp MOD exp','exp',3,'p_exp_arithmetic','pars.py',92),
  ('exp -> exp MUL exp','exp',3,'p_exp_arithmetic','pars.py',93),
  ('exp -> const','exp',1,'p_exp_const','pars.py',98),
  ('exp -> ID','exp',1,'p_exp_ID','pars.py',102),
  ('exp -> ID LSB exp RSB','exp',4,'p_exp_array','pars.py',106),
  ('exp -> ID LSB exp RSB ASSIGN exp','exp',6,'p_lvalue','pars.py',110),
  ('exp -> SUB exp','exp',2,'p_exp_sub','pars.py',114),
  ('exp -> LRB exp RRB','exp',3,'p_exp_par','pars.py',118),
  ('const -> FLOATNUMBER','const',1,'p_const_arithmetic','pars.py',123),
  ('const -> INTEGERNUMBER','const',1,'p_const_arithmetic','pars.py',124),
  ('block -> LCB stmtlist RCB','block',3,'p_block','pars.py',130),
  ('stmtlist -> stmtlist stmt','stmtlist',2,'p_stmtlist','pars.py',136),
  ('stmtlist -> <empty>','stmtlist',0,'p_stmtlist_empty','pars.py',141),
  ('stmt -> exp SEMICOLON','stmt',2,'p_stmt_sem','pars.py',146),
  ('stmt -> block','stmt',1,'p_stmt_block','pars.py',152),
  ('stmt -> vardec','stmt',1,'p_stmt_var','pars.py',158),
  ('stmt -> PRINT LRB ID RRB SEMICOLON','stmt',5,'p_stmt_print','pars.py',164),
  ('stmt -> IF LRB exp RRB stmt elseiflist','stmt',6,'p_stmt_if','pars.py',171),
  ('stmt -> WHILE LRB exp RRB stmt','stmt',5,'p_stmt_while','pars.py',175),
  ('stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt','stmt',8,'p_stmt_if_else','pars.py',179),
  ('stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt','stmt',9,'p_stmt_for','pars.py',183),
  ('stmt -> FOR LRB ID IN ID RRB stmt','stmt',7,'p_stmt_foreach','pars.py',187),
  ('stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON','stmt',8,'p_stmt_case','pars.py',191),
  ('case -> WHERE const COLON stmtlist','case',4,'p_case','pars.py',196),
  ('cases -> cases case','cases',2,'p_cases','pars.py',201),
  ('cases -> <empty>','cases',0,'p_cases_empty','pars.py',205),
  ('elseiflist -> elseiflist ELSEIF LRB exp RRB stmt','elseiflist',6,'p_elseiflist','pars.py',210),
  ('elseiflist -> <empty>','elseiflist',0,'p_elseiflist_empty','pars.py',215),
  ('exp -> relopexp','exp',1,'p_exp_relop','pars.py',219),
  ('relopexp -> exp GT exp','relopexp',3,'p_relopexp','pars.py',224),
  ('relopexp -> exp LT exp','relopexp',3,'p_relopexp','pars.py',225),
  ('relopexp -> exp NE exp','relopexp',3,'p_relopexp','pars.py',226),
  ('relopexp -> exp EQ exp','relopexp',3,'p_relopexp','pars.py',227),
  ('relopexp -> exp LE exp','relopexp',3,'p_relopexp','pars.py',228),
  ('relopexp -> exp GE exp','relopexp',3,'p_relopexp','pars.py',229),
  ('relopexp -> relopexp GT exp','relopexp',3,'p_relopexp_rel','pars.py',235),
  ('relopexp -> relopexp LT exp','relopexp',3,'p_relopexp_rel','pars.py',236),
  ('relopexp -> relopexp NE exp','relopexp',3,'p_relopexp_rel','pars.py',237),
  ('relopexp -> relopexp EQ exp','relopexp',3,'p_relopexp_rel','pars.py',238),
  ('relopexp -> relopexp LE exp','relopexp',3,'p_relopexp_rel','pars.py',239),
  ('relopexp -> relopexp GE exp','relopexp',3,'p_relopexp_rel','pars.py',240),
  ('exp -> exp AND exp','exp',3,'p_exp_and','pars.py',245),
  ('exp -> exp OR exp','exp',3,'p_exp_or','pars.py',249),
  ('exp -> NOT exp','exp',2,'p_exp_not','pars.py',253),
  ('const -> TRUE','const',1,'p_const','pars.py',258),
  ('const -> FALSE','const',1,'p_const','pars.py',259),
  ('paramdecs -> paramdecslist','paramdecs',1,'p_paramdecs','pars.py',267),
  ('paramdecs -> <empty>','paramdecs',0,'p_paramdecs_empty','pars.py',273),
  ('paramdecslist -> paramdec','paramdecslist',1,'p_paramdecslist','pars.py',279),
  ('paramdecslist -> paramdecslist COMMA paramdec','paramdecslist',3,'p_paramdecslist_comma','pars.py',285),
  ('paramdec -> ID COLON type','paramdec',3,'p_paramdec','pars.py',291),
  ('paramdec -> ID LSB RSB COLON type','paramdec',5,'p_paramdec','pars.py',292),
  ('exp -> ID LRB RRB','exp',3,'p_exp_fun','pars.py',298),
  ('exp -> ID LRB explist RRB','exp',4,'p_exp_fun_explist','pars.py',303),
  ('funcdec -> FUNCTION ID LRB paramdecs RRB block','funcdec',6,'p_funcdec','pars.py',308),
  ('funcdec -> FUNCTION ID LRB paramdecs RRB COLON type block','funcdec',8,'p_funcdec_return','pars.py',314),
  ('explist -> exp','explist',1,'p_explist','pars.py',320),
  ('explist -> explist COMMA exp','explist',3,'p_explist_comma','pars.py',326),
  ('dec -> funcdec','dec',1,'p_dec_funcdec','pars.py',332),
  ('stmt -> RETURN exp SEMICOLON','stmt',3,'p_stmt_return','pars.py',338),
]
